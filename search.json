[
  
    {
      "title"    : "当我们谈论RESTful时，我们在谈论什么",
      "category" : "work",
      "tags"     : "web-service, tips",
      "url"      : "/post/%E5%BD%93%E6%88%91%E4%BB%AC%E8%B0%88%E8%AE%BArestful%E6%97%B6%E6%88%91%E4%BB%AC%E5%9C%A8%E8%B0%88%E8%AE%BA%E4%BB%80%E4%B9%88",
      "date"     : "2015-12-19 00:00:00 +0800",
      "content"  : "标题好像有点噱头山人在此先检讨去知乎了一下发现这种句式叫做卡佛句式好像村上春树也用过看来是雅俗共赏的且回正文最近Team要做一个Service负责一些全局资源的管理并为Internal的其他Services提供通用资源访问接口想着之前一直是用一些RPC-style的架构不如来试试RESTful的吧虽然关于什么才是真正的REST一直有很多争论    I- Web服务的架构风格就像面向对象与面向过程编程模型一样Web Service应用服务中也有两种典型的架构模式Remote Procedure Call(即RPC还有一种类似的叫法Remote Method Invocation 细微的不同之处在于RPC通过调用远程的过程函数而RMI侧重于通过获取远程的对象引用而通过对象引用调用其内部的方法 )与REpresentational State Transfer(即REST)通常RPC是Operation Oriented其通过暴露内部的操作接口提供与之相应的不同编程语言的Client API来实现客户端与服务器的交互通常与服务器的通信基于HTTP协议但主要利用其作为一种传输媒介把通讯的方法信息以及状态都封装在HTTP协议的URI或是Body内部且大多使用GET或是POST等单一方法而REST则是一种Resource Oriented架构就像面向对象编程一样其把一个对象实体视为一种数据资源针对每一种数据资源都会有相应的Service Endpoint其也用HTTP协议但不同于RPCREST充分利用了HTTP协议在WWW上取得的成功直接视HTTP协议为一种应用层协议重用其各种HTTP方法以及统一响应码定义为全网范围内分布式系统通信提供了统一规范标准严格来说REST本身并不是一种具体架构而是一种更高level的标准规范初见于Roy Fielding的论文中文中试图提出一种针对分布式超媒体(Hypermedia)系统架构具有丰富表达能力的应用程序状态转换即RESTWeb应用服务的软件工程设计原则以及依照这些原则下规定客户端与服务器交互时应该遵守的一些限制比如客户端与服务器的交互需是无状态的为了提高Service性能而引入缓存机制为了简化整个系统架构提高交互的可见性提出的Uniform Interface的限制等 论文中主要有如下constrains:论文是在2000年写的开创性和预见性可想而知而正是因为其不是具体的某个实现架构也不是真正如RFC那样的定义清晰的业界标准这么多年来对REST的解读自然是仁者见仁智者见智了随着近几年RESTful Service越来越热几乎每一个人在设计Web Service架构时都声称自己是遵照REST原则来设计的因而诞生了好多RESTful Service API但其实大多数系统的设计都是不伦不类的RPC与REST混合体正如Richardson在他的那本经典的RESTful Web Services中所说其实多数人设计的都是RESTful-RPC混合架构模式但既然我们的主要争论点在RPC和REST这两者身上不妨通过特征比较法来看看二者的主要不同点    II- RPC vs RESTRPC和REST都是基于HTTP协议的我们不妨先看看他们使用HTTP请求的方式有什么不同当Client发起一个基本的HTTP请求首先需要确定两个内容即HTTP Verb(Method)URI(Resources Endpoint)1- HTTP Verb对于RPC而言常用的HTTP方法只是POST和GET尤其对于POST的使用比较依赖且很多时候决定是使用GET还是POST的主要依据就是是否请求含有数据而对于经典的RPC架构的产物如XML-RPC或是SOAP-RPC由于关于调用服务的所有信息如操作类型数据等都被封装在XML或是SOAP协议体Envelope内而该协议本身又只被作为HTTP协议体封装传输XML RPC 示例代码  POST /RPC2 HTTP/1.0User-Agent: Frontier/5.1.2 (WinNT)Host: betty.userland.comContent-Type: text/xmlContent-length: 181&amp;lt;?xml version=&amp;quot;1.0&amp;quot;?&amp;gt;&amp;lt;methodCall&amp;gt;   &amp;lt;methodName&amp;gt;examples.getStateName&amp;lt;/methodName&amp;gt;   &amp;lt;params&amp;gt;      &amp;lt;param&amp;gt;         &amp;lt;value&amp;gt;&amp;lt;i4&amp;gt;41&amp;lt;/i4&amp;gt;&amp;lt;/value&amp;gt;         &amp;lt;/param&amp;gt;    &amp;lt;/params&amp;gt;&amp;lt;/methodCall&amp;gt;  SOAP RPC示例代码   POST /StockQuote HTTP/1.1Host: www.stockquoteserver.comContent-Type: text/xml; charset=&amp;quot;utf-8&amp;quot;Content-Length: nnnnSOAPAction: &amp;quot;Some-URI&amp;quot;&amp;lt;SOAP-ENV:Envelope  xmlns:SOAP-ENV=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot;  SOAP-ENV:encodingStyle=&amp;quot;http://schemas.xmlsoap.org/soap/encoding/&amp;quot;&amp;gt;   &amp;lt;SOAP-ENV:Body&amp;gt;       &amp;lt;m:GetLastTradePrice xmlns:m=&amp;quot;Some-URI&amp;quot;&amp;gt;           &amp;lt;symbol&amp;gt;DIS&amp;lt;/symbol&amp;gt;       &amp;lt;/m:GetLastTradePrice&amp;gt;   &amp;lt;/SOAP-ENV:Body&amp;gt;&amp;lt;/SOAP-ENV:Envelope&amp;gt;我们来分析下该SOAP请求其目的很简单就是得到上次的交易价格其Operation是SOAP体中的GetLastTradePrice方法从方法名我们不难看出其实就是一个简单的查询但是却封装成复杂的SOAP协议体且本来基于HTTP协议的查询请求GET语义就能够满足但其却用POST方法来做我们知道从HTTP协议的角度各个HTTP Verb都有其标准规范如下图所示即POST请求通常用在资源创建或更新时而GET则是用在读取一个资源这样做的一个好处就是HTTP协议是整个WWW都一致使用的协议全网范围内有着一致的上下文而不像SOAP示例中其是读取资源还是更新资源只有客户端和服务器自己知道统一HTTP Verb带来的另一个好处就是Service缓存机制的实现变得很简单因为大家都建立在这些Verb规范的共识之上可以直接通过请求方法来判断是否这些内容该缓存或者应该从缓存读取除了HTTP VerbREST也基于统一的HTTP Response Code来表示请求响应的状态把HTTP响应头的语义状态与应用本身的资源请求结果状态统一如Amazon S3 REST风格的响应码便不会再像RPC风格的响应那样响应码是200/OK但返回的响应体却是Service specific的错误码完全的HTTP响应码标准定义可以参考HTTP/1.1协议 也有人是这么记的:   2- URI利用统一的HTTP Verb, Response Code也使得Fielding提出的Uniform interface成为可能另一方面网络上的资源访问统一接口便是URI对于Resource-Oriented架构模式而言便需要一个URI能够清晰无误的描述一个资源对象且URI应该有层次结构其改变最好能够以一种客户端用户可预测的方式来进行按照Richardson的说法一个好的URI需要self-descriptive和Addressibility与之相反如前面提到的RPC架构风格往往提供单个Service的全局URI然后通过SOAP等应用协议来封装方法和所要获取的资源   3- StatelessResource-Oriented架构的另一个重要特征便是无状态性但就Web Service而言状态有两种一种是应用程序状态一种是资源状态资源状态是Service本身内部维持的状态其通过统一资源接口暴露给Client当Client操作一个资源时如在一个图片分享网站上上传了一幅照片那么从Service的角度这个资源新产生了可以给它赋予一个URI来让Client进行增删改等资源操作了这些都是Service需要维护的状态应用程序状态是指客户端的行为如其访问了分页资源其当前所在的页数之前访问的是哪儿需不需要再次认证这些都属于应用程序状态REST的风格就是我不会维持这些状态所有的状态信息需要Client自己提供比如认证客户端需要每次访问时都提供认证当然这有利有弊但使得Web Service变得简单    III- RESTful该如何评价前面一章我们试图通过对比的方法来理解REST架构但我们该如何定义一个Web Services是RESTful的或不是RESTful的呢还是Richardson这哥么他把REST的一些原则特性细化成一系列可执行的步骤提出了自己的REST成熟度模型并再一次QCon的演讲中把它形象化为REST荣耀之路图中把REST成熟度分为0-3级    第0级是指没有使用REST仍然淹没在RPC的人流中把HTTP协议当做一种跟Web上远程系统交互的传输机制所谓的POX(Plain Old XML)指的就是与SOAPXMLJSON RPC类似的机制 第1级是指引入了Resource的概念交互的方式不再是单一的Endpoint下的传输体中不同方法的封装而是能够针对每一个独立的资源实体有相应的URI我们的操作方法不再是零散的参数传递而是在这个资源实体上的方法调用 第2级是指引入了我们前面提到的HTTP Verb和Response Code我们不依赖于传入自定义的操作方法而是利用HTTP协议本身的优势当我们想查询一个资源时候用GET想更新一个资源时用PUT想创建一个资源时用POST 关于POST和PUT的差别统一的观点是当Client知道待更新资源的URI就用PUT当Client不知道待更新资源的URI只是把资源给Service让它来决定资源的URI就用POST 第3级就是Fielding所说的Hypertext As the Enginee of Application StateHATEOAS也就指示了State Transfer的含义通过Hypermedia的响应来引导Client的下一步行为当Client能够以一种可以预测的方式来探索Service的调用接口更详细的介绍可以参考末尾的引用当然这个成熟度模型可以很好的表达REST但并不是唯一的标准也有很多人提出了质疑和自己的看法但山人认为它至少能够帮助我们以一种逻辑的方式让我们对什么是RESTful有了更为深入和清晰的理解  So long, and thanks for all the fish!   参考[1]. Do-You-Really-Know-Why-You-Prefer-Rest-over-Rpc.[2]. Rest Arch Style[3]. Measuring-Rest[4]. Rest in Practice[5]. Richardson Maturity Model  "
    } ,
  
    {
      "title"    : "也谈MCMC方法与Gibbs抽样",
      "category" : "机器学习",
      "tags"     : "research",
      "url"      : "/post/%E4%B9%9F%E8%B0%88MCMC%E6%96%B9%E6%B3%95%E4%B8%8EGibbs%E6%8A%BD%E6%A0%B7",
      "date"     : "2015-12-07 00:00:00 +0800",
      "content"  : "MCMC即传说中的Markov Chain Mento Carlo方法其主要用于统计推理中进行模拟抽样尤其在贝叶斯推理中有着非常广泛的应用如算法模型的后验参数估计问题很多情况下其后验概率分布没有确定性的解析解或者解析解计算起来非常复杂便可以通过MCMC模拟抽样根据大数定律参数的期望便可以通过对抽样样本的求均值来评估 山人第一次见到MCMC兄还是在研究僧阶段那时候以Latent Direichlet Allocation(LDA)为代表的Blei先生的一系列主题模型算法还很火甚至你还能看见Andrew Ng的身影于是导师欣然的把其另一篇层次主题模型的论文Hierarchical LDA(hLDA)甩给我们拍着我们的肩膀语重心长的说好好干会很有前景的于是我的MCMC初体验是这样的What the hell? 于是直到现在还对MCMC念念不忘好吧是耿耿于怀最近又看见Quora上有人讨论MCMC和Gibbs抽样再看时发现虽然有一两年未看脑部神经元还是不停的工作现在理解起来竟然清晰许多MCMC是Markov Chain和Mento Carlo两个概念的组合我们不妨分而治之先看看各自的含义   I-Markov Chain即马尔科夫链这哥么大家肯定不会陌生还记得Hidden Markov Model么Baum-Welch算法会推导了么:( )马尔科夫链的一个重要属性就是无记忆性其表示的随机过程在一个状态空间里游走且未来的状态只与当前的状态有关而与之前的状态均无关这种无记忆性便称之为马尔科夫性$$p&amp;#92;left( x^{t+1} | x^{t},x^{t-1}...&amp;#92;; x^{1} &amp;#92;right)&amp;#92;; =&amp;#92;; p&amp;#92;left( x^{t+1} | x^{t} &amp;#92;right)&amp;#92;tag{1}$$马尔科夫链是一种随机过程其定义有主要有两点即状态空间和转移概率矩阵如下图所示一个简单的马尔科夫链随机过程包含三个状态其状态之间的转移概率矩阵如下 假设在状态&amp;#92;(&amp;#92;Pi_{i}&amp;#92;)时你在Bull Market 状态且当前概率分布为&amp;#92;(&amp;#92;left[ 0,&amp;#92;; 1,&amp;#92;; 0 &amp;#92;right]&amp;#92;)在下一个&amp;#92;(&amp;#92;Pi _{i+1}&amp;#92;)状态时的概率分布为$$&amp;#92;Pi _{i+1}&amp;#92;; =&amp;#92;; &amp;#92;Pi _{i}&amp;#92;; .&amp;#92;; P&amp;#92;tag{2}$$则结果为&amp;#92;(&amp;#92;Pi _{i+1}&amp;#92;;=&amp;#92;;&amp;#92;left[ .15&amp;#92;; &amp;#92;; .8&amp;#92;; &amp;#92;; .05 &amp;#92;right]&amp;#92;)如此类推下一个状态分布则为$$&amp;#92;Pi _{i+1}&amp;#92;; =&amp;#92;; &amp;#92;Pi _{i}&amp;#92;; .&amp;#92;; P^{2}&amp;#92;tag{3}$$如此下去最终发现我们会得到一个稳定的状态此时$$&amp;#92;Pi &amp;#92;; =&amp;#92;; &amp;#92;Pi &amp;#92;; .&amp;#92;; P&amp;#92;tag{4}$$即状态分布变得稳定(Stationary)不会再随着状态转移概率的变化而变化且我们发现即使我们的初始状态分布矩阵不是&amp;#92;(&amp;#92;left[ 0,&amp;#92;; 1,&amp;#92;; 0 &amp;#92;right]&amp;#92;)而是另外一个值如&amp;#92;(&amp;#92;left[ 0.4,&amp;#92;; 0.3,&amp;#92;; 0.3 &amp;#92;right]&amp;#92;)时最终经过多次转移也会达到最终的稳定(Stationary)状态且稳定状态的分布是一致的即最终的Stationary状态与初始分布矩阵没有关系只与状态转移矩阵有关那末是不是所有的状态转移矩阵都能最终达到稳定状态呢答案自然不是还是需要马氏链定理的保证简单说就是如果一个非周期马氏链具有概率转移矩阵&amp;#92;(P &amp;#92;)且它的任何两个状态都是联通的那么如果&amp;#92;(l&amp;#92;mbox{im}_{n&amp;#92;; -&amp;gt;&amp;#92;infty }&amp;#92;; P_{ij}^{n}&amp;#92;; =&amp;#92;; &amp;#92;pi &amp;#92;left( j &amp;#92;right)&amp;#92;)存在且仅与j有关那么这样的一个稳定分布就是存在的这里还有一点山人刚开始时也是非常模糊就是很多算法中提到当经过了burn-in阶段状态分布稳定以后开始取样计算概率分布当时就想既然都稳定了&amp;#92;(&amp;#92;pi &amp;#92;)都保持不变了取的样本不都一样么其实这里所说的状态稳定是指满足了某一个概率分布即稳定后抽样出的样本都是同分布的而在稳定之前则可能不同的样本是产生自不同的概率分布  II-Monte Carlo说完了马尔科夫再来说说蒙特卡洛方法吧其名子来源于摩纳哥的蒙特卡洛赌场是一种通过模拟抽样求积分的方法一个经典的应用便是计算圆周率这个名叫hit and miss&amp;quot;的实验过程为假设有一个单位长度为1的正方形区域再以正方形的中心为圆心单位长度为半径画一个正方形的内切圆有一个随机数发射器随机的往正方形区域里发射当经过N多次以后圆周率可以估算为(hawaii.edu)  &amp;#92;(&amp;#92;pi &amp;#92;; =&amp;#92;; &amp;#92;frac{4N_{hit}}{N_{shot}}&amp;#92;)大学微积分中我们学过常见函数求积分的方法如&amp;#92;(I&amp;#92;; =&amp;#92;; &amp;#92;int_{&amp;#92;theta }^{&amp;#92;infty }{g&amp;#92;left( &amp;#92;theta  &amp;#92;right)p&amp;#92;left( &amp;#92;theta  &amp;#92;right)d&amp;#92;theta }&amp;#92;)p是&amp;#92;(&amp;#92;theta &amp;#92;)的概率密度函数求其在g上的积分但在实际应用中函数g往往是不可积的且&amp;#92;(&amp;#92;theta &amp;#92;)可能是高纬向量使得我们很难求得其解析解在大数定律和中心极限定理的保证下蒙特卡洛方法则通过模拟抽样的方法为求其近似解提供了一条途径我们可以通过从概率密度函数p中抽样出&amp;#92;(&amp;#92;theta &amp;#92;)最终MC近似的解为&amp;#92;(I^{&amp;#39;}&amp;#92;; =&amp;#92;; &amp;#92;sum_{i=1}^{M}{g&amp;#92;left( &amp;#92;theta _{i} &amp;#92;right)}&amp;#92;)应用到贝叶斯推理中如果我们能够通过抽样的方式从参数变量的联合分布中抽取到足够多的样本数据我们便可以通过贝叶斯参数估计等方法求得其近似值但往往参数的联合分布各个变量并非独立且很复杂尤其如LDA等主题生成模型里要对联合分布抽样几乎是不可能的有么有可能通过某种控制变量法对条件概率进行抽样借用马尔科夫链中条件概率转移矩阵达到稳定状态后的概率分布就是其变量的联合分布下的样本点呢  III-MCMC类方法于是为了避免构造一个复杂繁琐的联合分布函数来进行蒙特卡洛抽样MCMC类方法神兵天降通过构造一个状态转移概率矩阵那末当其到达稳定状态时分布便是所求的联合概率分布而联合分布函数的样本点则是每一次状态转移时自然产生的这么牛掰的想法当然不是山人想到的一个叫着Metropolis的哥么在1953年研究粒子系统的平稳性质便提出来了而目前我们常用的一个叫着Metropolis-Hastings算法便是在其基础上的一个改进  1 细致平稳条件我们在前面提到了我们可以通过构造一个状态转移概率矩阵使得其平稳状态下的概率分布就是我们想要的分布但不是随意构造一个状态转移概率矩阵就能满足的那需要什么样的条件呢细致平稳条件就是这样一个充分条件如果非周期马氏链的转移概率矩阵&amp;#92;(P&amp;#92;)和分布&amp;#92;(&amp;#92;pi &amp;#92;left( x &amp;#92;right)&amp;#92;)满足$$&amp;#92;pi &amp;#92;left( i &amp;#92;right)P_{ij}&amp;#92;; =&amp;#92;; &amp;#92;pi &amp;#92;left( j &amp;#92;right)P_{ji}&amp;#92;;  for&amp;#92;; all&amp;#92;; i,j&amp;#92;tag{5}$$则&amp;#92;(&amp;#92;pi &amp;#92;left( x &amp;#92;right)&amp;#92;)就是该马氏链的平稳分布那自然不是所有的概率矩阵和分布都满足等式5中的条件我们可以通过对马氏链进行一个小小的改造$$&amp;#92;pi &amp;#92;left( i &amp;#92;right)P_{ij}&amp;#92;alpha &amp;#92;left( i,j &amp;#92;right)&amp;#92;; =&amp;#92;; &amp;#92;pi &amp;#92;left( j &amp;#92;right)P_{ji}&amp;#92;alpha &amp;#92;left( j,i &amp;#92;right)&amp;#92;tag{6}$$于是新得到的马氏链为&amp;#92;(P &amp;#39;(j,i)&amp;#92;)$$&amp;#92;label{detailed-balance} &amp;#92;pi (i) &amp;#92;underbrace{p(i,j)&amp;#92;alpha(i,j)}_{P &amp;#39;(i,j)} = &amp;#92;pi (j) &amp;#92;underbrace{p(j,i)&amp;#92;alpha(j,i)}_{P &amp;#39;(j,i)}  &amp;#92;quad (**) &amp;#92;tag{7}$$而只要通过对称性取&amp;#92;(&amp;#92;alpha &amp;#92;left( i,j &amp;#92;right)&amp;#92;)为&amp;#92;(&amp;#92;pi &amp;#92;left( j &amp;#92;right)p&amp;#92;left( j,i &amp;#92;right)&amp;#92;)取&amp;#92;(&amp;#92;alpha &amp;#92;left( j,i &amp;#92;right)&amp;#92;)为&amp;#92;(&amp;#92;pi &amp;#92;left( i &amp;#92;right)p&amp;#92;left( i,j &amp;#92;right)&amp;#92;)即可此处的&amp;#92;(&amp;#92;alpha &amp;#92;left(.&amp;#92;right)&amp;#92;)称之为接受率其可以理解为在原来的马氏链上从状态&amp;#92;(i&amp;#92;)以&amp;#92;(p&amp;#92;left( i,j &amp;#92;right)&amp;#92;)的概率跳转到状态&amp;#92;(j&amp;#92;)时我们以&amp;#92;(&amp;#92;alpha &amp;#92;left(i,j&amp;#92;right)&amp;#92;)的概率接受这个跳转一般的MCMC采样算法的接受率通过和一个Uniform[0,1]分布采样的值u作比较如果接受率大于这个值则接受这次转移从i转移到j状态反之则保持原i状态但是我们在实际应用中使用这个方法时发现很多情况下接受率普遍很低导致马氏链状态转移缓慢最终收敛的速度非常慢为了解决这个问题我们还是采用类似等式6的方法分子分母的接受率同步增大$$&amp;#92;frac{&amp;#92;alpha &amp;#92;left( x,y &amp;#92;right)}{&amp;#92;alpha &amp;#92;left( y,x &amp;#92;right)}&amp;#92;; =&amp;#92;; &amp;#92;frac{&amp;#92;pi &amp;#92;left( y &amp;#92;right)p&amp;#92;left( y,x &amp;#92;right)}{&amp;#92;pi &amp;#92;left( x &amp;#92;right)p&amp;#92;left( x,y &amp;#92;right)}$$我们可以把跳转之后的状态&amp;#92;(&amp;#92;alpha &amp;#92;left( y,x &amp;#92;right)&amp;#92;)接受率为1则我们可以得到下面的接受率公式(注意接受率取值范围只能是[0,1])$$&amp;#92;alpha &amp;#92;left( i,j &amp;#92;right)&amp;#92;; =&amp;#92;; &amp;#92;min &amp;#92;left&amp;#92;{ &amp;#92;frac{&amp;#92;pi &amp;#92;left( j &amp;#92;right)p&amp;#92;left( j,i &amp;#92;right)}{&amp;#92;pi &amp;#92;left( i &amp;#92;right)p&amp;#92;left( i,j &amp;#92;right)},&amp;#92;; 1 &amp;#92;right&amp;#92;}&amp;#92;tag{8}$$tag{8}按照式8的接受率便是我们的Metropolis-Hastings算法  2 Gibbs抽样当变量状态多且维度比较高时MH算法的接受率仍然差强人意要是每次都接受该多好啊那什么样的情况下我从&amp;#92;(i&amp;#92;)到&amp;#92;(j&amp;#92;)时每次都能接受呢即接受率为1最终发现我们每次可以沿着垂直于某个变量维度的轴走即通过迭代的方法每一次只对一个变量进行采样举一个二维空间的例子假设一个概率分布&amp;#92;(p&amp;#92;left( x,y &amp;#92;right)&amp;#92;)来看&amp;#92;(x&amp;#92;)坐标相同的两个点&amp;#92;(A&amp;#92;left( x_{1},&amp;#92;; y_{1} &amp;#92;right)&amp;#92;)和&amp;#92;(B&amp;#92;left( x_{1},&amp;#92;; y_{2} &amp;#92;right)&amp;#92;)通过简单的联合概率和条件概率的关系我们可以得到$$p&amp;#92;left( x_{1},&amp;#92;; y_{1} &amp;#92;right)p&amp;#92;left( y_{2}| x_{1} &amp;#92;right)&amp;#92;; =&amp;#92;; p&amp;#92;left( x_{1} &amp;#92;right)p&amp;#92;left( y_{1}| x_{1}  &amp;#92;right)p&amp;#92;left( y_{2}| x_{1}  &amp;#92;right)&amp;#92;tag{9}$$$$p&amp;#92;left( x_{1},&amp;#92;; y_{2} &amp;#92;right)p&amp;#92;left( y_{1}| x_{1} &amp;#92;right)&amp;#92;; =&amp;#92;; p&amp;#92;left( x_{1} &amp;#92;right)p&amp;#92;left( y_{2}| x_{1}  &amp;#92;right)p&amp;#92;left( y_{1}| x_{1}  &amp;#92;right)&amp;#92;tag{10}$$很明显等式(9),(10)右边是相等的如(11)所示:$$p&amp;#92;left( x_{1},&amp;#92;; y_{1} &amp;#92;right)p&amp;#92;left( y_{2}| x_{1}  &amp;#92;right)&amp;#92;; =&amp;#92;; p&amp;#92;left( x_{1},y_{2} &amp;#92;right)p&amp;#92;left( y_{1}| x_{1}  &amp;#92;right)&amp;#92;tag{11}$$下图给出了一个更直观的表示即从A到B和从B到A的转移是直接满足细致平稳条件的因此我们不需要等式(6)中的接受率来帮忙即接受率为1.图中假设初始状态为A则从A到下一个概率转移矩阵分别为$$Q&amp;#92;left( A&amp;#92;; -&amp;gt;&amp;#92;; B &amp;#92;right)&amp;#92;; =&amp;#92;; p&amp;#92;left( y_{B}| x_{1} &amp;#92;right)$$$$Q&amp;#92;left( A&amp;#92;; -&amp;gt;&amp;#92;; C &amp;#92;right)&amp;#92;; =&amp;#92;; p&amp;#92;left( x_{C}| y_{1} &amp;#92;right)$$$$ Q&amp;#92;left( A&amp;#92;; -&amp;gt;&amp;#92;; D &amp;#92;right)&amp;#92;; =&amp;#92;; 0&amp;#92;tag{12}$$因此类似于曼哈顿距离的方法状态转移总是沿着横平竖直的街区进行这边是Gibbs抽样算法的核心思想下图给出了一个Gibbs抽样的直观图  3 收敛条件的判断我们都知道当概率状态转移稳定时其分布便是所要求的联合概率分布但我们不可能通过如等式(2),(3)的方法来每转换一步就求其概率分布比较是否改变主要原因有二其一是不可把所有变量间的转移概率都找到其二矩阵计算耗时耗力常见的方法便是通过burn-in的方法多跑几次也有通过计算当前状态下的联合分布可能性函数然后根据Autocorrelation Function(ACF)的变化速率来判断迭代是否收敛So long, and thanks for all the fish.   参考[1] PRML读书会第十一章 Sampling Methods[2] LDA-math-MCMC 和 Gibbs Sampling[3] Burn-In is Unnecessary[4] One Long Run in MCMC[5] What-are-Markov-Chain-Monte-Carlo-methods-in-laymans-terms[6] MCMCAlgorithmsBeta_Distribution  "
    } ,
  
    {
      "title"    : "核函数与支持向量机入门",
      "category" : "机器学习",
      "tags"     : "research",
      "url"      : "/post/%E6%A0%B8%E5%87%BD%E6%95%B0%E4%B8%8E%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA%E5%85%A5%E9%97%A8",
      "date"     : "2015-08-30 00:00:00 +0800",
      "content"  : "理解支持向量机(Support Vector Machine, SVM)的角度很多从分类问题入手由最小化训练错误导出限制条件下的凸优化问题的解进而由线性可分的硬边界泛化为利用松弛变量放宽限制条件的软边界问题从一般性的损失函数出发由线性回归的0-1损失函数换成hinge损失函数进而加上针对模型复杂度的L2惩罚项亦或是从支持向量的角度由核函数的一般应用到稀疏核的支持向量进而分析SVM的核技巧后者学习曲线相对来说比较大却有助于深入理解SVM     不知是从哪来的先入为主以前提到SVM脑中总是出现一些非常confusing的概念什么最大边际Lagrange对偶性最小最大化一系列公式本来打印好好的论文没看到优化目标函数呢就放之一旁等着毕业卖废纸了山人也觉得没得治了好吧从此篇开始就自称山人了: (但当山人看到下面关于一个SVM的段子时对它的热情又从新燃起了Allaboutinquiry同学是这样说滴:    关于这个同学举牌子的典故我知道我也是CMU的这是在2009年在Pittsburgh举行的G20峰会现场外面很多反对G20的支持G20的都来凑热闹我们这位同学也来了鱼目混珠的高举Support Vector Machine的牌子很多老美就晕了你说你支持加强控制二氧化碳排放我懂你支持的的这个Vector Machine是个什么东西啊然后这个同学搞笑的目的就达到了I- 非线性变换很多算法在处理输入空间的样本时会把输入空间的生数据样本转换成特征空间的样本表达有时这是一种显式的的特征选择如去噪或提取更高层表达能力的特征有时这是为了解决样本在生输入空间不可分而进行的高维空间变换从而把原本不可分的数据变换成在高纬可分的特征点而这个映射便是通过非线性变换来实现的一个直观的例子:     如上图所示原始的二维平面上是遍布生数据的输入点其类别标签用红点和蓝点来区分由左图中平面上点的分布来看在输入的二维空间是线性不可分的但我们可以通过一个寻找一个特征映射函数&amp;#92;(&amp;#92;phi &amp;#92;left( . &amp;#92;right)&amp;#92;)来把输入空间的点&amp;#92;(x&amp;#92;)映射为三维特征空间中的点&amp;#92;(&amp;#92;phi &amp;#92;left( x &amp;#92;right)&amp;#92;)于是这个三维空间中的点便可以通过左图中一个粉红色的超平面来分隔但即使在三维特征空间可分我们怎么把这个三维特征空间的分隔超平面映射回二维输入空间去呢很简单我们可以直接把超平面与特征空间圆锥体的截平面直接投影到二维空间里去所形成的椭圆曲线就是二维空间的分隔线如上面右图中的白色所示   II- 核方法核方法便是基于非线性特征映射定义如下$$k&amp;#92;left( x,x&amp;#39; &amp;#92;right)&amp;#92;; =&amp;#92;; &amp;#92;phi &amp;#92;left( x &amp;#92;right)^{T}&amp;#92;phi &amp;#92;left( x&amp;#39; &amp;#92;right)&amp;#92;label{p}&amp;#92;tag{1}$$其是在大边际分类器背景下被重新引入机器学习进而催生出了SVM而伴随着SVM的显著效果和广泛引用越来越多的核方法被引入通过它便可以把一些原本在低维不可分的数据集映射到高维可分空间映射到高维空间后的数据点便可以通过高维空间中的简单线性计算来达到可分的目的但是这个过程可能需要两步第一是找到某种上面所说的非线性变换的映射&amp;#92;(&amp;#92;phi &amp;#92;left( x &amp;#92;right)&amp;#92;), 把所有的低维空间的点变换成高维空间的点第二是在高维空间中找到一种简单的线性可分函数来对这些映射后的点进行分类而其中面临的一个问题就是映射后的空间维度往往非常的高其向量点积的运算非常的耗时费力有些情况下为了实现高纬可分映射后的维度可能是无限维度而在这么高纬度的空间进行向量运算变得非常困难所以说即使我们能够想象到这样一种高维特征映射的方式以现代的计算能力来看成本还是太高了核函数恰恰就像连接低维空间和高维空间的虫洞我们可以通过它在低位空间直接计算高维空间正如时空中的虫洞由于星体旋转和引力作用飘忽不定在算法上使用核函数也是有限制条件的如上述定义(1)所述算法必须能表示成两个变量的非线性映射的点积核函数也有其重要的属性如连续对称一般情况下需要是半正定的Gram矩阵而正定核能够保证是凸优化问题且有唯一解  实际应用中可选择的内核函数有很多如线性内核多项式内核高斯内核sigmoid内核等就如内核函数本身一样如何根据实际的数据集特征选择合适的内核也是非常tricky的事我们往往需要根据样本数特征数数据可视化后数据特征与类别的关系来综合选择1.线性内核使用线性内核其实就等价于没有内核特征映射的过程是简单的线性变换公式如下所示$$k&amp;#92;left( x,y &amp;#92;right)=x^{T}y&amp;#92;; +&amp;#92;; &amp;#92;mbox{C}&amp;#92;tag{2}$$常量C便是非线性内核的可选参数通常情况下线性内核的适用场景很多很多线性可分甚至线性不可分的数据集使用线性的效果往往比非线性的要好尤其是在数据集很大且特征很多或是特征远大于数据集时线性内核便往往能够取得很不错的效果且其相对于其他非线性内核训练时要快的多2.多项式内核$$k&amp;#92;left( x,y &amp;#92;right)=&amp;#92;left( &amp;#92;alpha x^{T}y&amp;#92;; +&amp;#92;; &amp;#92;mbox{C} &amp;#92;right)^{d}&amp;#92;tag{3}$$当维度&amp;#92;(d&amp;#92;)过大时往往容易造成过拟合问题通常2度的多项式内核在用来特征选择的时候非常有用3.高斯RBF内核$$k&amp;#92;left( x,y &amp;#92;right)&amp;#92;; =&amp;#92;; &amp;#92;exp &amp;#92;; &amp;#92;left( -&amp;#92;frac{&amp;#92;left| &amp;#92;left| x-y &amp;#92;right| &amp;#92;right|^{2}}{2&amp;#92;sigma ^{2}} &amp;#92;right)&amp;#92;tag{4}$$其另外一种表达$$k&amp;#92;left( x,y &amp;#92;right)&amp;#92;; =&amp;#92;; &amp;#92;exp &amp;#92;left( -&amp;#92;gamma &amp;#92;left| &amp;#92;left| x&amp;#92;; -&amp;#92;; y &amp;#92;right| &amp;#92;right|^{2} &amp;#92;right)&amp;#92;tag{5}$$Where &amp;#92;(&amp;#92;gamma&amp;#92;) &amp;gt; 0高斯内核属于经典的RBF内核线性内核也属于一种特殊的RBF内核一般来说RBF内核是首选尤其对于那些类别和特征值呈非线性关系的数据集相对于多项式内核RBF超参要少相对更为简单且&amp;#92;(0 &amp;lt; K_{i,j} &amp;lt; 1&amp;#92;)相对于多项式内核可能从0到无限大之间其数值计算的压力也会少很多而sigmoid的Gram矩阵是条件正定的使用范围受限RBF内核则没有这个问题但值得一提的是RBF内核和L2 Regularization类似倾向于选择平滑的特征在本文分类中线性内核往往训练比起更为高效且性能相差无几4.Sigmoid 内核$$k&amp;#92;left( x,y &amp;#92;right)&amp;#92;; =&amp;#92;; &amp;#92;tanh &amp;#92;left( &amp;#92;alpha x^{T}y&amp;#92;; +&amp;#92;; &amp;#92;mbox{C} &amp;#92;right)&amp;#92;tag{6}$$Where &amp;#92;(&amp;#92;alpha&amp;#92;)可以视为一个scaling 参数常数&amp;#92;(C&amp;#92;)则是shifting参数sigmoid内核起源于神经网络activation函数使用的也是sigmoid function而每个节点的数据向量也是线性权重组合使用sigmoid内核的SVM模型等价于一个两层感知机虽然其是conditionally positive definite, 实际应用发现也能够有很好的性能台大的一篇论文讨论过选择sigmoid内核参数的问题关于各个内核的对比quora上有一篇从parametric和nonparametric角度的问答相当经典   III- 从稀疏内核机到SVM定义(1)中提到的基于非线性映射的内核方法是基于所有&amp;#92;(x&amp;#92;; &amp;#92;cdot &amp;#92;; x&amp;#39;&amp;#92;)训练数据对的核函数虽然能够将高维空间的非线性映射特征直接在原始空间计算但当训练样本过多时这样的计算也是费时费力的有没有可能做进一步的特征集选择过滤到无关的样本点如下图所示如果我们想正确的划分出红点和蓝点我们只要保证分割的线在左边的两个绿点和右边的一个绿点之间便可以而无需去考虑所有其他的红点和蓝点因为他们对于我们能否正确分类没有任何决定性作用那么我们为何苦费时费力的计算所有的数据点呢答案当然是没有必要我们在核方法上进行稀疏特征选择便是稀疏内核机而最大分类边际便是其特征选择方法  当然哪些特征点能够产生最大分类边际不是我们看到这幅图就能凭空想出来的据说最初做SVM分类时选的也是定义(4)所用的高斯内核他们没有直接使用最小化误分类率的决策平面而是通过最小化学习到的密度模型的错误概率来确定最优超平面结果发现当&amp;#92;(&amp;#92;sigma ^{2}&amp;#92;)极限于0时达到最大边际即当&amp;#92;(&amp;#92;sigma ^{2}&amp;#92;)越接近于0那些边上无关的红点或蓝点对于最终错误率的影响越小最终当达到极限时只有这些绿点对其有贡献了而这些绿点便是所说的支持向量于是SVM的优化目标就成了在正确分类的情况下最大化分类边际这个最大边际则是一种稀疏特征选择    参考[1] Kernel Functions for ML Applications.[2] A Practise Guide to SVM Classification.[3] Pattern Recognition and Machine Learning."
    } ,
  
    {
      "title"    : "浅谈L0,L1,L2范数及其应用",
      "category" : "机器学习",
      "tags"     : "research",
      "url"      : "/post/%E6%B5%85%E8%B0%88l0l1l2%E8%8C%83%E6%95%B0%E5%8F%8A%E5%85%B6%E5%BA%94%E7%94%A8",
      "date"     : "2015-08-23 00:00:00 +0800",
      "content"  : "在线性代数函数分析等数学分支中范数Norm是一个函数其赋予某个向量空间或矩阵中的每个向量以长度或大小对于零向量另其长度为零直观的说向量或矩阵的范数越大则我们可以说这个向量或矩阵也就越大有时范数有很多更为常见的叫法如绝对值其实便是一维向量空间中实数或复数的范数而Euclidean距离也是一种范数  范数的一般化定义设&amp;#92;(p&amp;#92;geq 1&amp;#92;)的实数p-norm定义为 $$&amp;#92;begin{align}&amp;#92;left| &amp;#92;left| x &amp;#92;right| &amp;#92;right|_{p}&amp;#92;; :=&amp;#92;; &amp;#92;left( &amp;#92;sum_{i=1}^{n}{&amp;#92;left| x_{i} &amp;#92;right|^{p}} &amp;#92;right)^{&amp;#92;frac{1}{p}}&amp;#92;label{p}&amp;#92;tag{1}&amp;#92;end{align}$$此处当&amp;#92;(p=1&amp;#92;)时我们称之为taxicab Norm也叫Manhattan Norm其来源是曼哈顿的出租车司机在四四方方的曼哈顿街道中从一点到另一点所需要走过的距离也即我们所要讨论的l1范数其表示某个向量中所有元素绝对值的和而当&amp;#92;(p=2&amp;#92;)时则是我们最为常见的Euclidean norm也称为Euclidean distance也即我们要讨论的l2范数而当&amp;#92;(p=0&amp;#92;)时因其不再满足三角不等性严格的说此时p已不算是范数了但很多人仍然称之为l0范数这三个范数有很多非常有意思的特征尤其是在机器学习中的正则化Regularization以及稀疏编码Sparse Coding有非常有趣的应用下图给出了一个Lp球的形状随着P的减少的可视化图1- L0 范数虽然L0严格说不属于范数我们可以采用等式&amp;#92;(&amp;#92;ref{p}&amp;#92;)来给出l0-norm得定义$$&amp;#92;left| &amp;#92;left| x &amp;#92;right| &amp;#92;right|_{0}&amp;#92;; :=&amp;#92;; ^{0}&amp;#92;sqrt{&amp;#92;sum_{i=0}^{n}{x_{i}^{0}}}&amp;#92;tag{2}$$上面的公式仍然让人不是很明白0的指数和平方根严格意义上是受限条件下才成立的因此在实际应用中多数人给出下面的替代定义$$&amp;#92;left| &amp;#92;left| x &amp;#92;right| &amp;#92;right|_{0}&amp;#92;; &amp;#92;; =&amp;#92;; &amp;#92;#&amp;#92;left( i &amp;#92;right)&amp;#92;; with&amp;#92;; x_{i}&amp;#92;; &amp;#92;neq &amp;#92;; 0 &amp;#92;tag{3}$$其表示向量中所有非零元素的个数正是L0范数的这个属性使得其非常适合机器学习中稀疏编码特征选择的应用通过最小化L0范数来寻找最少最优的稀疏特征项但不幸的是L0范数的最小化问题在实际应用中是NP难问题因此很多情况下L0优化问题就会被relaxe为更高维度的范数问题如L1范数L2范数最小化问题  2- L1 范数对于向量X其L1范数的定义如下$$&amp;#92;left| &amp;#92;left| x &amp;#92;right| &amp;#92;right|_{1}&amp;#92;; :=&amp;#92;; &amp;#92;sum_{i=1}^{n}{&amp;#92;left| x_{i} &amp;#92;right|} &amp;#92;tag{4}$$其应用范围非常的广泛如在计算机视觉中的Sum of Absolute DifferentsMean Absolute Error都是利用L1范式的定义L1最优化问题的解是稀疏性的其倾向于选择很少的一些非常大的值和很多的insignificant的小值而L2最优化则更多的非常少的特别大的值却又很多相对小的值但其仍然对最优化解有significant的贡献但从最优化问题解的平滑性来看L1范数的最优解相对于L2范数要少但其往往是最优解而L2的解很多但更多的倾向于某种局部最优解但由于L1范数并没有平滑的函数表示起初L1最优化问题解决起来非常困难但随着计算机技术的到来利用很多凸优化算法使得L1最优化成为可能3- L2 范数当然范数中最常见也最著名的非L2范数莫属其应用也几乎包括科学和工程的各个领域定义公式如下$$&amp;#92;left| &amp;#92;left| x &amp;#92;right| &amp;#92;right|_{2}&amp;#92;; :=&amp;#92;; &amp;#92;sqrt{&amp;#92;sum_{i=1}^{n}{x_{i}^{2}}} &amp;#92;tag{5}$$也Euclidean Norm如果用于计算两个向量之间的不同即是Euclidean Distance.欧几里德范数的最优化问题可以用如下公式表述$$&amp;#92;min &amp;#92;; &amp;#92;left| &amp;#92;left| x &amp;#92;right| &amp;#92;right|_{2}&amp;#92;; subject&amp;#92;; to&amp;#92;; Ax&amp;#92;; =&amp;#92;; b &amp;#92;tag{6}$$借助拉格朗日乘子我们便可以解决该最优化问题由L2衍生我们还可以定义无限norm即l-infinity norm$$&amp;#92;left| &amp;#92;left| x &amp;#92;right| &amp;#92;right|_{&amp;#92;infty }&amp;#92;; :=&amp;#92;; ^{&amp;#92;infty }&amp;#92;sqrt{&amp;#92;sum_{i=1}^{n}{x_{i}^{&amp;#92;infty }}} &amp;#92;tag{7}$$一眼看上去上面的公式还是有点tricky的我们通过一个简单的数学变换假设X_j是向量中最大的元素则根据无限大的特性我们可以得到$$x_{j}^{&amp;#92;infty }&amp;#92;; &amp;gt;&amp;gt;&amp;#92;; x_{i}^{&amp;#92;infty }&amp;#92;; &amp;#92;vee j&amp;#92;neq i$$则可知$$&amp;#92;sum_{i=1}^{n}{x_{i}^{&amp;#92;infty }&amp;#92;; =&amp;#92;; x_{j}^{&amp;#92;infty }}$$则根据公式7的定义我们可以得到$$&amp;#92;left| &amp;#92;left| x &amp;#92;right| &amp;#92;right|_{&amp;#92;infty }&amp;#92;; =&amp;#92;; ^{&amp;#92;infty }&amp;#92;sqrt{&amp;#92;sum_{i=1}^{n}{x_{i}^{&amp;#92;infty }}}&amp;#92;; =&amp;#92;; ^{&amp;#92;infty }&amp;#92;sqrt{x_{j}^{&amp;#92;infty }}&amp;#92;; &amp;#92;; =&amp;#92;; &amp;#92;left| x_{j} &amp;#92;right| $$因此我们便可以说l-infinity norm是X向量中最大元素的长度$$&amp;#92;left| &amp;#92;left| x &amp;#92;right| &amp;#92;right|_{&amp;#92;infty }&amp;#92;; =&amp;#92;; &amp;#92;max &amp;#92;left( &amp;#92;left| x_{j} &amp;#92;right| &amp;#92;right) &amp;#92;tag{8}$$4- 机器学习中的应用不知道有多少人是因为机器学习中的正则化和特征选择等才开始了解这些范数的至少我是L0范数本身是特征选择的最直接最理想的方案但如前所述其不可分且很难优化因此实际应用中我们使用L1来得到L0的最优凸近似L2相对于L1具有更为平滑的特性在模型预测中往往比L1具有更好的预测特性当遇到两个对预测有帮助的特征时L1倾向于选择一个更大的特征而L2更倾向把两者结合起来  4-1 正则化在机器学习中正则化是指在损失函数中通过引入一些额外的信息来防止ill-posed问题或过拟合问题一般这些额外的信息是用来对模型复杂度进行惩罚Occam&amp;#39;s razor其一般形式如下$$Loss&amp;#92;left( X,Y &amp;#92;right)&amp;#92;; =&amp;#92;; &amp;#92;mbox{E}rror&amp;#92;left( X,Y &amp;#92;right)&amp;#92;; +&amp;#92;; &amp;#92;alpha &amp;#92;left| &amp;#92;left| w &amp;#92;right| &amp;#92;right| &amp;#92;tag{9}$$&amp;#92;(&amp;#92;; &amp;#92;left| &amp;#92;left| w &amp;#92;right| &amp;#92;right|&amp;#92;)便可以选取L1或是L2范数来作为惩罚项不同的模型其损失函数也不同对于线性回归而言如果惩罚项选择L1则是我们所说的Lasso回归而L2则是Ridge回归下面我们列出了不同模型中的正则化的损失函数来自Andrew Ng的Machine Learning课程Regularized Logistic Regression$$J&amp;#92;left( &amp;#92;theta  &amp;#92;right)&amp;#92;; =&amp;#92;; -&amp;#92;; &amp;#92;frac{1}{m}&amp;#92;left[ &amp;#92;sum_{i=i}^{m}{y^{&amp;#92;left( i &amp;#92;right)}&amp;#92;log h_{&amp;#92;theta }&amp;#92;left( x^{&amp;#92;left( i &amp;#92;right)} &amp;#92;right)&amp;#92;; +&amp;#92;; &amp;#92;left( 1-y^{&amp;#92;left( i &amp;#92;right)} &amp;#92;right)&amp;#92;log &amp;#92;left( 1&amp;#92;; -&amp;#92;; h_{&amp;#92;theta }&amp;#92;left( x^{&amp;#92;left( i &amp;#92;right)} &amp;#92;right) &amp;#92;right)} &amp;#92;right]&amp;#92;; +&amp;#92;; &amp;#92;frac{&amp;#92;lambda }{2m}&amp;#92;sum_{j=1}^{n}{&amp;#92;theta _{j}^{2}}$$Regularized Neural Network$$J&amp;#92;left( &amp;#92;theta  &amp;#92;right)&amp;#92;; =&amp;#92;; -&amp;#92;; &amp;#92;frac{1}{m}&amp;#92;left[ &amp;#92;sum_{i=i}^{m}{&amp;#92;sum_{k=1}^{K}{y_{k}^{&amp;#92;left( i &amp;#92;right)}&amp;#92;log &amp;#92;left( h_{&amp;#92;theta }&amp;#92;left( x^{&amp;#92;left( i &amp;#92;right)} &amp;#92;right) &amp;#92;right)_{k}}&amp;#92;; +&amp;#92;; &amp;#92;left( 1-y^{&amp;#92;left( i &amp;#92;right)} &amp;#92;right)&amp;#92;log &amp;#92;left( 1&amp;#92;; -&amp;#92;; &amp;#92;left( h_{&amp;#92;theta }&amp;#92;left( x^{&amp;#92;left( i &amp;#92;right)} &amp;#92;right) &amp;#92;right)_{k} &amp;#92;right)} &amp;#92;right]&amp;#92;; +&amp;#92;; &amp;#92;frac{&amp;#92;lambda }{2m}&amp;#92;sum_{l=1}^{L-1}{&amp;#92;sum_{i=1}^{s_{l}}{&amp;#92;sum_{j=1}^{s_{l}+1}{&amp;#92;left( &amp;#92;theta _{ji}^{&amp;#92;left( l &amp;#92;right)} &amp;#92;right)^{2}}}}$$Soft Margin SVM$$&amp;#92;frac{1}{2}|w|^2+C&amp;#92;sum_i&amp;#92;max(0,1-y_i(w^&amp;#92;intercal x_i+b))$$从上面可以看出常用的正则化项多是L2范数除了防止过拟合的问题还有一个好处就是能否改善ill-posed(condition)问题尤其是当训练样本相对于特征数非常少时其矩阵便是非满秩的往往倾向于有无数个解且是不可逆的其condition num便会很大一方面根据此得到的最优化值很不稳定往往某个特征变量很小的变动都会引发最终结果较大的偏差另外通过矩阵求逆从而求的最优解就会变的非常困难如对于线性回归而言求的最优解析解为$$w^{}&amp;#92;; =&amp;#92;; &amp;#92;left( X^{T}X &amp;#92;right)^{-1}X^{T}y$$而加上L2正则项后其变为$$w^{&amp;#92;cdot }&amp;#92;; =&amp;#92;; &amp;#92;left( X^{T}X&amp;#92;; +&amp;#92;; &amp;#92;lambda I &amp;#92;right)^{-1}X^{T}y$$从而可以直接求逆改善了condition number而对于无解析解通过迭代优化的算法L2正则化通过将目标函数变为-strongly convex强凸有效的加快了其收敛速度  4-2 贝叶斯先验正则化项从贝叶斯学习理论的角度来看其相当于一种先验函数即当你训练一个模型时仅仅依靠当前的训练集数据是不够的为了实现更好的预测泛化效果我们还应该加上先验项而L1则相当于设置一个Laplacean先验去选择MAPmaximum a posteriori假设而L2则类似于 Gaussian先验如下图所示从上图可以看出L1先验对大值和小值的tolerate都很好而L2先验则倾向于均匀化大值和小值  4-3 特征选择与稀疏编码机器学习社区里通常把特征选择的方法分为三种一种是基于统计学的一些方法对特征进行预筛选选出子集作为模型输入如统计推理使用的假设检验P值另一种是采用某种成熟的学习算法进行特征选择如决策树中采用信息增益来选择特征还有一种便是在模型算法中进行自动特征选择而L1范数作为正则化项其特征选择的图谱倾向于spiky实现了有效的特征选择稀疏编码也是想通过寻找尽可能少的特征表达某个输入的向量X$$&amp;#92;min &amp;#92;; a_{i}^{&amp;#92;left( j &amp;#92;right)},&amp;#92;phi _{i}&amp;#92;; &amp;#92;; &amp;#92;sum_{j=1}^{m}{&amp;#92;left| &amp;#92;left| x^{&amp;#92;left( j &amp;#92;right)}-&amp;#92;sum_{i=1}^{k}{a_{i}^{&amp;#92;left( j &amp;#92;right)}&amp;#92;phi _{i}} &amp;#92;right| &amp;#92;right|^{2}&amp;#92;; +&amp;#92;; &amp;#92;lambda &amp;#92;sum_{i=1}^{k}{&amp;#92;mbox{S}&amp;#92;left( a_{i}^{&amp;#92;left( j &amp;#92;right)} &amp;#92;right)}}$$其中&amp;#92;(&amp;#92;phi _{i}&amp;#92;)是所要寻找的基向量&amp;#92;(a_{i}^{&amp;#92;left( j &amp;#92;right)}&amp;#92;)是我们要优化的各个基向量的权重最右边的表达式便是其正则化惩罚项在这里也称Sparse Cost实际中我们通常便用L1范数  5 参考[1.] Wiki: Norm.[2.] Rorasa&amp;#39;s blog.[3.] MaxJax.[4.] 机器学习中的范数规范化.[5.] Difference between l1 and l2.[6.] gradient-descent-wolfe-s-condition-and-logistic-regression.  "
    } ,
  
    {
      "title"    : "Java 异常处理实践",
      "category" : "programming",
      "tags"     : "language, tips",
      "url"      : "/post/java-exception-programming-practice",
      "date"     : "2015-08-04 00:00:00 +0800",
      "content"  : "Java中的异常处理一直是困扰着我比如catch并throw一个异常的best practice是什么checked和unchecked异常的区别和使用异常和错误该如何处理最近在工作中连续出现了一些与异常相关的一些issues才发现需要进行一些整理和总结了  I- Exception的层次结构如图所示java错误异常类都是源于一个叫做Throwable的基类只有该类及其子类的实例对象才可以被JVM进行throw操作且也只有该类及其子类能作为catch语句的输入参数一个Error类及其子类表明一个合理设计的应用不需要也不应该catch的一些严重问题多数时候这些错误是来自一些异常情况如AnnotationFormatError当一个Annotation解析器试图读取一个类文件的Annotation时发现其是malformed而throw的ErrorLinkageError则是指当一个类依赖的一些类在compile阶段之后有了一些非兼容性的改变然后导致依赖其的类出现链接错误NoClassDefFoundException便是其一个子类当然还有经典的VirtualMachineError其一般在java虚拟机broken或是没有足够的资源供其运行时throw从编译时异常检测的角度Error类时unchecked异常通畅其表明环境或是程序设计的一个严重bug另外一个Throwable的子类是Exception类其是所有异常类的父类跟Error相对应Exception类通常指一个合理设计的应用可能需要catch的从编译时异常检测的角度大多数的Exception类都是可检测异常除了RuntimeException及其子类一些常见的运行时异常如NullPointerException当一个应用试图使用本该是一个实例对象而实际为null值时抛出例如调用一个null对象的方法域值NoSuchElementException当一个应用调用枚举类型中nextElement方法在没有更多元素时抛出IllegalArgumentException则表明一个方法传入了非法或者不合适的参数其他常见的还有CastClassExceptionArithmeticException等如除数是0时ArithmeticException便会抛出    II- Checked vs UnChecked异常Checked Exception通常可以用来声明哪些在程序运行过程中可以预见的又不可避免的异常但对程序本身来说却是一定程度上可以恢复的如文件不存在异常虽然程序本身尽可能的去检测传入参数的合理性但文件不存在这类异常是不可能避免的我们通过什么这样一个checked 异常来提醒调用者他们需要考虑到这种情况这便是其不可避免的地方而另外文件找不到可以通过告诉调用者输入新的文件名或是等待调用者改变文件路径等方式来合理的恢复而通畅Unchecked异常是由于程序方法的编程逻辑漏洞的原因是不可恢复的准确的把握这两者的抽象层次III- 一些best practiseIf an exception can be properly handled then it should be caught, otherwise, it should be thrown.When deciding on checked exceptions vs. unchecked exceptions, ask yourself, &amp;quot;What action can the client code take when the exception occurs?&amp;quot;Never let implementation-specific checked exceptions escalate to the higher layers. For example, do not propagate SQLException from data access code to the business objects layer. Business objects layer do not need to know about SQLException.Try not to create new custom exceptions if they do not have useful information for client code.Log exceptions just once. Logging the same exception stack trace more than once can confuse the programmer examining the stack trace about the original source of exception. So just log it once.IV- 参考[1.] Oracle Java API.[2.] Top 10 questions about Java Exception.[3.] Checked Exception Practise[4.] Oreilly.com.[5.] HowtodoinjavaSo long, and thanks for all the fish.  "
    } ,
  
    {
      "title"    : "微信与财付通接口签名调试总结",
      "category" : "work",
      "tags"     : "payments, tips",
      "url"      : "/post/%E5%BE%AE%E4%BF%A1%E4%B8%8E%E8%B4%A2%E4%BB%98%E9%80%9A%E6%94%AF%E4%BB%98%E6%8E%A5%E5%8F%A3%E7%AD%BE%E5%90%8D%E8%B0%83%E8%AF%95%E6%80%BB%E7%BB%93",
      "date"     : "2015-07-30 00:00:00 +0800",
      "content"  : "这几年国内互联网的迅速发展不仅催生出了BAT也使得第三方支付平台异军突起在欧美还是信用卡统治的时代另一个具有中国特色的第三方支付方式External Payments, 或跳转支付不仅成功的绑定了用户的支付习惯更是为国外支付行业进入中国建造了一个壁垒而支付宝(Alipay)和微信(WeChat)则是如今第三方支付的主流最近在做微信支付接入的项目虽然有微信文档以及那边技术人员的帮助在调试签名上还是走了不少弯路就当是个记录也给将要接入者提供一个参考  微信APP支付接口签名基本参数格式要求参数中间如果有空格需要自行URL编码参数中涉及到金额的一律转换成以分为单位的整数不允许出现小数点请确保相应的秘钥对和AppID是没问题的获取PrepayId请求签名把请求转换成JSON串格式POST方式发出如果使用GSON库的GsonBuilder来transform则需要使用disableHtmlEscaping().对请求串中的package参数进行MD5签名时traceid参数即使为空也需要加入签名串MD5秘钥也需要参加queryString形式的排序所有参数名均要转成小写参数值中间不能有空格package值转换成URLEncoded的值后作为整体Prepareid请求的一个参数在和其他值一起参与SHA1签名如果是单纯的MD5+SHA1签名则SHA1签名不需要转换成大写但如果接入商户想用RSA签名来代替SHA1签名则需要注意微信后台使用的是C++版本的签名接口虽然微信文档上会写SHA1保持不变其结果封装成RSA即可但此处所指的RSA签名是纯粹的没有经过哈希的RSA签名而我们通畅所指的RSA签名则大多数时候是指SHA1_WITH_RSA所以如果你RSA签名出错你可以看下是否是自己多了一层SHA1哈希 timestamp 是以秒为单位而非默认的毫秒支付成功后台通知签名其POST体采用XML格式来返回通知结果值得注意的是XML格式可能包含&amp;lt;![CDATA[]]格式的数据即Character Data其表明在XML标签之间可能含有不能被XML 标记语言准确解析的字符因此需要用这个标记在验签提取字符串的时候需要去掉该字符下面则是提取含有CDATA的XML数据一段小代码  private String getNodeDataFromNode(Node node) {      String data;      if(node == null) {        return null;      }      if(node instanceof CharacterData) {        data = ((CharacterData) node).getData();      }      else {        data = node.getNodeValue();      }      return data;    }    财付通退款接口签名财付通相对于微信的支付系统比较老久很多文档似乎没有微信写的严密列出了一些可能让读者混淆的地方  退款请求原生支持MD5和RSA签名字符集也说是可以支持UTF-8和GBK但其实有些时候即使你请求串中声明是UTF-8一些签名错误的情况下财付通返回的信息仍有可能是GBK的所以在处理签名响应的时候这个需要注意一下退款请求文档中虽然说明是可以支持GET和POST请求但是不要被他误解尤其当你使用POST请求时你还是要把请求体转换成query string格式且POST体中的参数也要用URLEncode格式而与此相反退款响应采用的是XML格式的响应体不需要URLDecode了常见调试签名错误描述not match signature {&amp;quot;errcode&amp;quot;:49004,&amp;quot;errmsg&amp;quot;:&amp;quot;not match signature&amp;quot;} 签名错误invalid signatureservice is busy, please try later.签名验证失败后续想到继续添加吧.So long, and thanks for all the fish.参考[1]. 微信签名安全规范.[2]. 财付通支付.[3]. Z.  "
    } ,
  
    {
      "title"    : "为Jekyll博客添加目录与ScrollSpy效果",
      "category" : "tutorials",
      "tags"     : "jekyll, tips",
      "url"      : "/post/%E4%B8%BAjekyll%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E7%9B%AE%E5%BD%95%E4%B8%8Escrollspy%E6%95%88%E6%9E%9C",
      "date"     : "2015-07-28 00:00:00 +0800",
      "content"  : "随着网上利用JekyllGithub Pages搭建个人静态博客的帖子越来越多按照教程自己动手搭一个基于Github账户的博客已完全成为一个五分钟速成课程的内容了网上也随处可见优美的博客主题且能完全即插即用但对于一些想要更深入定制化的博主本文主要集合自己折腾的经验介绍下如何给Jekyll博客添加目录即Table of Content以及定制化目录显示的ScrollSpy效果如下图所示生成ScrollSpy效果的目录结构主要有三个部分1 目录生成插件选择Jekyll官网上的plugins目录下便列出了很多有用的插件其中关于目录生成的jekyll-toc-generator便是官方推荐的但对于在Github上建站的同学应该知道Github禁止了很多plugins的自动build尽管也正在增加一些插件白名单但貌似这个插件是不能通过源码提交给Github pages自动build的因此对于不想通过设定.nojekyll 本地build然后push整个静态代码到Github上的同学可能一些纯javascript的插件便是首选1-a 纯JS版本本文所用的便是纯javascript版的toc插件jekyll-table-of-contents. 其README也很详细照着一步步配即可* 在待添加插件的模板中首先加入jquery.js的依赖然后是把该toc.js放在其后&amp;lt;script src=&amp;quot;/javascripts/jquery-2.1.4.min.js&amp;quot; type=&amp;quot;text/javascript&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;&amp;lt;script src=&amp;quot;/javascripts/toc.js&amp;quot; type=&amp;quot;text/javascript&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;在需要显示目录结构的地方加上如下div&amp;lt;div id=&amp;quot;toc&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;把toc.js调用函数放在最后如&amp;lt;/body&amp;gt;之前即可&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;$(document).ready(function() {    $(&amp;#39;#toc&amp;#39;).toc();}); &amp;lt;/script&amp;gt;2 Markdown实现版本Toc插件生成目录的原理便是借助markdown为每个header生成一个唯一的id然后Toc便会寻找这样的header id逐一的构造相应的锚链接并显示即可常见的Markdown实现如rdiscount,kramdown,redcarpet不同的版本需要在_config.yml文件中进行相应的配置如对于rdiscount配置如下markdown: rdiscountrdiscount:  extensions:    - generate_toc值得说明的是我发现rdiscount对每个header会生成相同的id,便导致了Toc插件生成的所有目录都被定向到同一个锚链接在网上收了下有一些issues谈到这方面的问题如1. https://github.com/jekyll/jekyll/issues/1102. https://github.com/jekyll/jekyll/issues/4713. https://github.com/ghiculescu/jekyll-table-of-contents/issues/16所以如果有同学遇到类似的情况可以用其他的markdown版本如redcarpet.对于redcarpet,配置如下markdown: redcarpetredcarpet:  extensions: [with_toc_data]用redcarpet时同样值得注意的是对于使用&amp;lt;!--more--&amp;gt;串来做摘要分割符的会发现redcarpet并不能根据其来准确的截取相应的摘要串原因便是redcarpet会对一些字符如&amp;lt;,&amp;gt;进行转义变成相应的&amp;amp;lt;,&amp;amp;gt;2-a 锚链接缩进问题当你为网页设置了一个固定位置的导航栏具有确定的高度然后你为其他页面内容生成了锚链接如本文提到的目录结构当你点击锚链接时页面会跳转到相应的锚链接位置且该锚链接的起始点会缩进到最上方而部分被导航栏遮住如下表左表所示    点击http://foo.com/#bar  错误 (but the common behavior):         正确:  +---------------------------------+      +---------------------------------+  | BAR///////////////////// header |      | //////////////////////// header |  +---------------------------------+      +---------------------------------+  | Here is the rest of the Text    |      | BAR                             |  | ...                             |      |                                 |  | ...                             |      | Here is the rest of the Text    |  | ...                             |      | ...                             |  +---------------------------------+      +---------------------------------+而你希望的行为则是如右表所示的对此可以在toc脚本生成header时为其添加一个div的class,&amp;lt;h1&amp;gt;&amp;lt;a class=&amp;quot;anchor&amp;quot; name=&amp;quot;barlink&amp;quot;&amp;gt;Bar&amp;lt;/a&amp;gt;&amp;lt;/h1&amp;gt;然后在css中设置起式样为/* 具体padding高度可以根据你导航栏的高度来设定 */.anchor{padding-top: 50px;}3 为目录显示添加scrollspy效果scrollspy效果即导航栏或目录会随着页面的滑动位置自动显示当前所在的段落所属的导航条目其主要是基于著名的bootstrap来实现的W3Cschool上有一个设置scrollSpy的简单教程但其主要是针对手动设置header id的情况针对通过toc.js自动生成header id的配置如下  添加bootstrap式样头和脚本&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;/stylesheets/bootstrap.min.css&amp;quot;&amp;gt;&amp;lt;script src=&amp;quot;http://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;在你想要操作的页面范围内通常是)内设置滚动事件的响应目标可以是id或是class此处我们用toc表示目录如下&amp;lt;body  data-spy=&amp;quot;scroll&amp;quot; data-target=&amp;quot;.toc&amp;quot; data-offset=&amp;quot;20&amp;quot;&amp;gt;设置你的toc div: &amp;lt;div class=&amp;quot;toc&amp;quot;&amp;gt;/* 你的scrollSpy目录结构将要显示在这里 */&amp;lt;/div&amp;gt;在你的toc.js脚本中添加bootstrap中的nav nav-pills nav-stacked`类/* 把 html = settings.title + &amp;quot; &amp;lt;&amp;quot; + settings.listType + &amp;quot;&amp;gt;&amp;quot; 变成如下 */html = settings.title + &amp;quot; &amp;lt;&amp;quot; + settings.listType + &amp;quot; class = &amp;#39;nav nav-pills nav-stacked&amp;#39;&amp;gt;&amp;quot;;So long, and Thanks for all the fish.参考[1]. jekyll-table-of-contents.[2]. positionfixed-page-header-and-anchors.[3]. W3cScholl.[4]. Implementing ScrollSpy"
    } ,
  
    {
      "title"    : "Sublime2下配置Python模块查找路径PYTHONPATH",
      "category" : "tutorials",
      "tags"     : "tips",
      "url"      : "/post/Sublime2%E4%B8%8B%E9%85%8D%E7%BD%AEPython%E6%A8%A1%E5%9D%97%E6%9F%A5%E6%89%BE%E8%B7%AF%E5%BE%84PYTHONPATH",
      "date"     : "2015-07-21 00:00:00 +0800",
      "content"  : "最近在搞sclearn kit库用命令行build太麻烦就直接用Sublime2来build但发现build时总是出现sclearn模块找不到的情况但的确已经通过pip install 了相关包最后发现是sublime2里配置的Python setting 路径也需要配置PYTHONPATH变量来指出module的路径问题场景按照sclearn安装页的指示安装了必要的package后在sublime2中通过cmd + B`来build后出现了如下错误  Traceback (most recent call last):File &amp;quot;/Users/weiheng/Documents/personal/demo/scikit/plot_classifier_comparison.py&amp;quot;, line 34, in &amp;lt;module&amp;gt;from sklearn.cross_validation import train_test_splitImportError: No module named sklearn.cross_validation但我用python命令行import是没问题的原因分析需要在Python.sublime-build中设置env变量Google了一些可能的答案发现上面的错误是由于sublime2中默认的python模块的路径中找不到sclearn模块而控制模块查找路径的则是$PYTHONPATH变量而非$PATH变量且sublime2 GUI是通过自己的python设置文件查找变量的很多建议在.profile .zshrc等命令行配置文件中加上PYTHOINPATH变量的其实是不能工作的solution则是Click Sublime2 Text 2菜单进入PreferenceBrowse PackagesPython文件夹编辑Python.sublime-build文件在其中加上  &amp;quot;env&amp;quot;:{    &amp;quot;PYTHONPATH&amp;quot;:&amp;quot;/usr/local/lib/python:/usr/local/lib/python2.7/site-packages&amp;quot;},保存即可贴一个build之后生成的分类器比较照片对于理解不同分类器很有帮组  参考[1] Stackoverflow[2] How to specify which Python version   "
    } ,
  
    {
      "title"    : ".gitignore文件不起作用",
      "category" : "tutorials",
      "tags"     : "tips",
      "url"      : "/post/gitignore%E6%96%87%E4%BB%B6%E4%B8%8D%E8%B5%B7%E4%BD%9C%E7%94%A8",
      "date"     : "2015-06-07 00:00:00 +0800",
      "content"  : "当我们用git时常常会习惯把我们不想上传到远程代码库中的一些本地文件夹放在一个叫做.gitignore的文件中例如常见的本地build文件夹一些IDE如Intellig,Eclipse的项目管理文件但有些时候我们会遇到这样的问题放入gitignore文件夹中的文件却还是被git index, 当你通过git status 显示文件状态时他们并没有被忽略问题场景 当你在git库中编写某些代码文件并已经stage该文件之后你发现某个文件你不想用了想在以后的改变中忽略它然后你再你的.gitignore文件中加入该文件名结果它并没有被忽略 当你从远程代码库中git clone一份代码中本地并做些修改build然后通过git add .等stage了这些改变当你通过git status查看状态时发现不小心把build/文件夹给add进来了于是你在.gitignore文件中加入了build/但发现并不起作用根本原因.gitignore文件只是ignore没有被staged(cached)文件对于已经被staged文件加入ignore文件时一定要先从staged移除下面这段话来自github因此要想用gitignore忽略文件必须先把它们从staged中移除commit你已有的改变保存当前的工作git rm --cached file/path/to/be/ignoredgit add .git commit -m &amp;quot;fixed untracked files&amp;quot;引用[1]. gitignore-not-working[2]. ignoring file  "
    } ,
  
    {
      "title"    : "css常用tips汇总",
      "category" : "tutorials",
      "tags"     : "tips",
      "url"      : "/post/css%E5%B8%B8%E7%94%A8tips%E6%B1%87%E6%80%BB",
      "date"     : "2015-06-07 00:00:00 +0800",
      "content"  : "最近给博客换了一个新的主题布局把以前传统方式的侧边栏给换成了导航栏同时利用font-awesome图标加了些分类和标签由于之前没有系统的看过关于css+div方面的书籍只是在用到某个效果时临时的Google于是在这边纪录下用到的一些非常有用的css+div的tips.1. 图片根据所在div容器的范围自适应大小.img {    max-width: 100%;    max-height: 100%;}2. 导航栏固定在最顶端且两边margin都为0.  .site-nav {    width: 100%;}3. 改变div中文字大小使其适应比如导航栏中的搜索框.  .nav-search {  line-height: 25px;}4. 移除搜索框的外围边框同时移除输入搜索时出现的outline.如下面图示第一幅图就是搜索输入框默认会出现灰色的边界框而第二幅图中蓝色框圈所示就是在用户点击输入时出现的框圈很多时候你发现这两种框圈的显示效果会很难看通过下面的css样式便可以移除Fig 1. search input with grey borderFig 2. outline with yellow border   .nav-search input#search {  /* remove input border */  -webkit-appearance: none;  border: 0;  /* remove outline */  outline: none;}5. div + display 选项.none: 一些media options时如果想要在小屏幕如智能手机上不现实某个div则可以用display:none选项inline: 只占用它所需要的最小的宽度且不必强制换行其左右均可以有元素存在). 不可以设置高度和宽度属性也没有top-margin,top-padding属性block: 占用整个可用的宽度之前和之后都有空行 高度宽度marginpadding都可以设置inline-block: 具有inline的特点占用最小宽度但没有强制换行其左右均可以有元素却有block的属性可以设置高度和宽度等  6. @media query 规则.移动互联的今天仅仅是pc端已经远不能满足用户的多途径浏览需求了如smartphone, tablet, laptop等等如果使你的网站真正的mobile-friendly便尤为重要了而最简单的实现方法就是通过@media 规则来 /* screen display side &amp;gt;= 960 px(common large desktop display) */@media print, screen and (min-width: 960px) {}/* screen display size &amp;gt;= 661 and &amp;lt;= 960 px(common laptop display) */@media print, screen and (min-width: 661px) and (max-width: 960px) {}/* screen display size &amp;gt;= 481 and &amp;lt;= 660px (common tablet etc) */@media print, screen and (min-width: 481px) and (max-width: 660px){}/* for small screen device, like smartphone*/@media print, screen and (max-width: 480px) {  .nav-search {    display:none;  }  .nav-logo {    display: none;  }}如你可以根据不同屏幕的大小来设置不同class,id的显示与否颜色等各种特性7. width 100% vs. auto很多时候对于block元素默认的宽度便是占满父容器剩余空间如有marginpadding时其默认宽度设置便是剩余的宽度这便是width:auto的效果而很多时候一些developer喜欢把宽度设置成100%其表明把其宽度设置成父容器相同的长度这样如果该block再有padding或是margin的属性其便会延伸到父容器外面去可以参考JSFiddle上的一个例子.  后续新的tips,会持续更新-引用[1]. img标签auto resize[2]. Display选项[3]. inline vs inlink-block[4]. float vs display[5]. width auto vs width 100%[6]. Media queries  "
    } ,
  
    {
      "title"    : "Singleton Design Pattern",
      "category" : "design-pattern",
      "tags"     : "headfirst, tools",
      "url"      : "/post/singleton-design-pattern",
      "date"     : "2015-05-30 00:00:00 +0800",
      "content"  : "Singleton模式看似简单却有很多值得注意的地方虽然很多时候开口闭口都是singleton其实很多时候很难完全正确的写出一个singleton模式比如忽略构造函数的private特性示例变量声明volatile关键字以及线程安全等就像是算法题中常见的快速排序二分查找常见却很少有人真正准确写出代码   下面给出一个经典的多线程安全的简单例子然后NOTE下值得注意的几点    package org.josepheng.design_pattern.singleton;    public class ConnectionManager {      private static volatile ConnectionManager uniqConnctor;      private ConnectionManager() {          // private constructor.      }      /**        * Global access point of obtain unqiue object instance.        */      public static ConnectionManager getInstance() {          if (uniqConnctor == null) {              synchronized (ConnectionManager.class){                  if (uniqConnctor == null) {                      uniqConnctor = new ConnectionManager();                  }              }          }          return uniqConnctor;      }  }Watch Out:构造函数是private,防止了外部对象创建类instance,同时保证不能够通过继承来创建全局唯一的access point便是通过getInstance的static方法来实现因为方法本身是静态的所以该方法中的uniqConnctor也需要声明为static的变量为了处理多线程的情况getInstance通常需要加上synchronize的线程锁但考虑到应用实际性能需求的情况可以有以下不同的实现a. 直接 synchronize 整个getInstance函数这样最简单但对于uniqConnector是否为空都要synchronize,性能严重下降b. 直接在uniqConnector声明时进行初始化就省略了getInstance中非空的检测c. 就是上面代码所示的double checking lock"
    } ,
  
    {
      "title"    : "Common ShortKey And Command on MacOSX",
      "category" : "work",
      "tags"     : "tools",
      "url"      : "/post/Common-ShortKey-And-Command-On-MacOSX",
      "date"     : "2014-11-11 00:00:00 +0800",
      "content"  : "Only during the 3 hours experience on MacBook Pro, I find that I could not love it more. Yes, maybe you can say, it&amp;#39;s price seems make people daunting. However, if you really give yourself a try, you&amp;#39;ll find that, the biggest regret ever is why I haven&amp;#39;t migrate to Mac earlier. It will really save my so much time and energy.Windows or LinuxPerfect position between the simplify and foolish. :). Personally, I think that Windows exactly make people feels himself a foolish and will have no improvment in skills or communications things. And linux is so great, however the biggest problem is that it&amp;#39;s not mature in present. I have try my 7 year college life in all kinds of *nix distribution, such as Ubuntu, OpenSUSE, RedHat, Gentoo, FreeBSD, Solaris and etc. And in the end, I really feels that the processes this years are all combined with so much duplications and complcated process, It will kill so much time, and if you are not devote yourself in this great career, It will gain so little, as long as you&amp;#39;re lack of keeping this work.Current, I really find the perfect combination of Windows and *nix. And on the day of Nov 11, 2014. China&amp;#39;s biggest e-comments glories of the year.Common Useful ShortKey,Commandos x short key operation:1. delete a work : Option + delete.2. copy: Command + c3. paste: Command + v4. delete a whole line:  Command + delete5. quickly enter a URL: Command + L6. switch between the safari tabs: Ctrl + TabBasic Tools InstallmentBasic tools install:brew :ruby -e &amp;quot;$(curl -fsSl https://raw.githubusercontent.com/Homebrew/install/master/install)&amp;quot;oh-my-zsh:curl -L https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh | shSo long, and really thanks for all the fish!"
    } ,
  
    {
      "title"    : "Add Comment to Jekyll Blog with Disqus",
      "category" : "tutorials",
      "tags"     : "jekyll",
      "url"      : "/post/add-comment-to-jekyll-blog-with-disqus",
      "date"     : "2014-08-09 00:00:00 +0800",
      "content"  : "Blogging with personal domain, Github hosted, Jekyll themesIf you are tired of common blogging with Wordpress, Pager like, and want to try some cool things of DIY, Just take a look at these combination:Buy a personal domain on Godaddy, hosted on Github, and setting you blog template with the help ofJekyll. It&amp;#39;s not a fresh thing when I write this article. So what I am aimed is to introduce a common way to add commentsto your jekyll theme. Disqus Here.Comments with DisqusIt&amp;#39;s actually a lot simpler than you might think. The main process just contains following steps: 1. Register an account on Disqus. After register of disqus account, you could go next step to register your website, such as your personal domain blog website. The whole register process is very self explanation, so I will take no more explanation here. 2. Generate code for your jekyll powered blog. The last and crucial step is to select the type of install instruction. You will see a lot of common blogger platforms. What we choose here is Universal Code here. And once you selected, Disqus will automatically generate a bit of code that look like this:    &amp;lt;div id=&amp;quot;disqus_thread&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;    &amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;        /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */    // required: replace example with your forum shortname        var disqus_shortname = &amp;#39;&amp;lt;accountname&amp;gt;&amp;#39;;        /* * * DON&amp;#39;T EDIT BELOW THIS LINE * * */        (function() {            var dsq = document.createElement(&amp;#39;script&amp;#39;);        dsq.type = &amp;#39;text/javascript&amp;#39;;        dsq.async = true;           dsq.sre = &amp;#39;http://&amp;#39; + disqus_shortname + &amp;#39;.disqus.com/embed.js&amp;#39;;           (document.getElementsByTagName(&amp;#39;head&amp;#39;)[0]                || document.getElementsByTagName(&amp;#39;body&amp;#39;)[0]).appendChild(dsq);       })();   &amp;lt;/script&amp;gt;   &amp;lt;noscript&amp;gt;Please enable JavaScript to view the &amp;lt;a href=&amp;quot;http://disqus.com/?ref_noscript&amp;quot;&amp;gt;       comments powered by Disqus.&amp;lt;/a&amp;gt;&amp;lt;/noscript&amp;gt;   &amp;lt;a href=&amp;quot;http://disqus.com&amp;quot; class=&amp;quot;dsq-brlink&amp;quot;&amp;gt;blog comments powered by       &amp;lt;span class=&amp;quot;logo-disqus&amp;quot;&amp;gt;Disqus&amp;lt;/span&amp;gt;&amp;lt;/a&amp;gt; Now what you need to do is just putting them into the proper layout html template, post layout for example. 4.  Noted that, most situation we need to test our Jekyll in local. In order for Disqus to work on your local, you need to tell it that you are working in development mode. If you don&amp;#39;t do this, then you will get an message stating it can&amp;#39;t reach the server. All you need to do is add a new variable with a value of 1.  &amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;      /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */      // required: replace example with your forum shortname      var disqus_shortname = &amp;#39;&amp;lt;shortname&amp;gt;&amp;#39;;      var disqus_developer = 1; // This turns developer mode on                                // Make sure you remove this before you push this                                // to your live site.      /* * * DON&amp;#39;T EDIT BELOW THIS LINE * * */      (function() {       var dsq = document.createElement(&amp;#39;script&amp;#39;);       dsq.type = &amp;#39;text/javascript&amp;#39;;       dsq.async = true;       dsq.sre = &amp;#39;http://&amp;#39; + disqus_shortname + &amp;#39;.disqus.com/embed.js&amp;#39;;       (document.getElementsByTagName(&amp;#39;head&amp;#39;)[0]           || document.getElementsByTagName(&amp;#39;body&amp;#39;)[0]).appendChild(dsq);     })();   &amp;lt;/script&amp;gt;   &amp;lt;noscript&amp;gt;Please enable JavaScript to view the &amp;lt;a href=&amp;quot;http://disqus.com/?ref_noscript&amp;quot;&amp;gt;       comments powered by Disqus.&amp;lt;/a&amp;gt;&amp;lt;/noscript&amp;gt;   &amp;lt;a href=&amp;quot;http://disqus.com&amp;quot; class=&amp;quot;dsq-brlink&amp;quot;&amp;gt;blog comments powered by   &amp;lt;span class=&amp;quot;logo-disqus&amp;quot;&amp;gt;Disqus&amp;lt;/span&amp;gt;&amp;lt;/a&amp;gt;Once you have these set up, everything worked perfectly.ReferenceAdding Disqus Comments"
    } ,
  
    {
      "title"    : "Builder Design Pattern",
      "category" : "design-pattern",
      "tags"     : "headfirst",
      "url"      : "/post/Builder-Design-Pattern",
      "date"     : "2014-07-31 00:00:00 +0800",
      "content"  : "At First Sight of Builder PatternThe first time I encountered the Builder Pattern would date back to the beautiful internship time in Red Hat. What inspired me a lot is its strange setter way. 1 class PeopleBuilder { 2     private String name = &amp;quot;Joseph&amp;quot; 3     private int age = 24; 4     private String talent = &amp;quot;programming&amp;quot;; 5  6     public PeopleBuilder setName(String name) { 7  this.name = name; 8  return this; 9     }10     public PeopleBuilder setAge(int age) {11         this.age = age;12  return this;13     }14     public PeopleBuilder setTalent(String talent) {15  this.talent = talent;16  return this;17     }18 }The function will return object itself, in setter methods. Also these setter methods can avoid too many parameters in a function invocation process, such as: 1     PeopleBuilder peopleBuilder = new PeopleBuilder(); 2     /* 3      * Common definition for the doWork() function: 4      */ 5     public void doWork(String workName, int age, String talent) { 6  if(age &amp;lt; 18) { 7      log.error(&amp;quot;Can not employee cirtical labour!&amp;quot;); 8      throw new IllegalAgeException(&amp;quot;age litter than 18&amp;quot;); 9         }10  doTalent(talent);11         log.info(String.format(&amp;quot;Name:[%s], Talent:[%s]&amp;quot;, workName, talent));12     }13     /*14      * define function with PeopleBuilder object as the only parameters.15      */16     public void doWork(peopleBuilder.setAge(19).setName(&amp;quot;Heng&amp;quot;)17  .setTalent(&amp;quot;programming&amp;quot;)) {18  if(peopleBuilder.getAge() &amp;lt; 18) {19      log.error(&amp;quot;Can not employee cirtical labour!&amp;quot;);20      throw new IllegalAgeException(&amp;quot;age litter than 18&amp;quot;);21         }22  doTalent(peopleBuilder.getTalent());23  log.info(String.format(&amp;quot;Name:[$s], Talent:[%s]&amp;quot;, peopleBuilder.getName()24      , peopleBuilder.getTalent());25     }At the first glance of the above Builder Pattern usage, it resoved the too many parameters problem. However, when doWork() function invoke the PeopleBuilder class, it looks really strange and weild. Now the PeopleBuilder looks more like a POJO but a Builder. The get methods in Builder really strange. So the most important thing to do is to just figure out what the adventages and disadvantages do the builder pattern suit:1. if you find that there are too many parameters in a function invocation, you could take a consideration: could it be encapsulated into a Java Bean Object. and with necessary *get, ***set* methods.2. *Still, you find that the encapsulated class could not satify with your requirement. some construct parameters are necessary for you and some a optional. But all they could only be assigned value at first construct stage of the object. The object become read only, and be immutable.3. Then, Builder Pattern is becoming your first choice.An Example of Classical Builder Pattern.mail sender builder 1     Class EmailSender { 2  /* 3      * required parameters for send a email. 4      */ 5  private final String subject; 6  private final String from; 7  private final String to; 8  /* 9      * optional parameters.10      */11  private final String cc;12  private final String body;13 14  /*15      * private construct function with EmailSenderBuilder.16      */17  private EmailSender(EmailSenderBuilder emailBuilder) {18      this.subject = emailBuilder.subject;19      this.from = emailBuilder.from;20      this.to = emailBuilder.to;21      this.cc = emailBuilder.cc;22      this.body = emailBuilder.body;23  }24  /**25      * noted the static class accessor.26      */27       public static EmailSenderBuilder {28           private final String subject;29           private final String from;30           private final String to;31           private String cc;   /* non-final statement compared to EmailSender */32           private String body; /* non-final statement compred to EmailSender */33           public EmailSenderBuilder(String subject, String from, String to) {34               this.subject = subject;35               this.from = from;36               this.to = to;37       }38           /**39           * fluent interface idiom .40           */41           public subject(String subject) {42               this.subject = subject;43               return this;44           }45           public from(String from) {46               this.from = from;47               return this;48           }49           public to(String to) {50               this.to = to;51               return this;52           }53           /**54           * It&amp;#39;s definitely cool! Also you can implement the logic55           * condition in build according to your requirement.56           */57           public EmailSender build() {58               return new EmailSender(this);59           }60       }61     }So long and thanks for all the fish!ReferenceThe builder pattern in practice.Builder Pattern."
    } ,
  
    {
      "title"    : "Facade Design Pattern",
      "category" : "design-pattern",
      "tags"     : "headfirst",
      "url"      : "/post/Facade-Design-Pattern",
      "date"     : "2014-07-15 00:00:00 +0800",
      "content"  : "Facade pattern provides a simplified interface to a set of interfaces within a system and thus it hides the complexities of the subsystem from the client. It creates a layer to abstract and unify the related interfaces in the application and define an entry point to each subsystem level and thus make them communicate only through their faces.To simplify the interaction process, we introduce the facade layer. Facade expose a simplified interface(in this case a single interface to perform that multi-step process) and internally it interacts with those components and gets job done for you one way. Common representation are dipicted as followings:Common MistakesLayered architecture is good but assess the need for every layer. Just naming a class as ABCDFacade.java doesn&amp;#39;t really make it a facade.facade is focus on process flow, but the bussniess logic. Controller is not a facade.facade helps to reduce the complexity of subsystem clients interacts to. But if there is only one or two lines of code, just avoids the facade pattern. Clients can invoke it directly.Subsystems are not aware of facade and there should be no reference for facade in subsystem. it&amp;#39;s a one way communication between the facade and subsystem. Anonther common pattern, Mediator pattern adapt two way communication.Summary of Facade PatternFacade provides a single interface.Programmers comfort is a main purpose of facade.Facade is used for promoting subsystem independence and portability.Translating data to suit the interface of a subsystem is done by the facade.Reference+ JavaCodeGeeks+ Javapaper"
    } ,
  
    {
      "title"    : "Controller-View-Model",
      "category" : "design-pattern",
      "tags"     : "headfirst",
      "url"      : "/post/Controller-View-Model",
      "date"     : "2014-07-06 00:00:00 +0800",
      "content"  : "Models represent knowledge. A view is a (visual) representation of its model. It is thus acting as a presentation filter. A view is attached to its model or model part and get the data necessary for the presentation from the model by asking quetions. It may also update the model by sending appropriate messages. A controller is the link between a user and system. It provides the user with input by arranging for relavant views to present themselves in appropriate places on the screen. The controller receives such user output, translate it into the appropriate messages and pass these messages on to one or more of the views.Model: Data only. Get methods, set methods, etc. It is isolated. It knows nothing about View, or the controlls.View: UI only. Only show what you tell it to, and never  performs any transformation or validation logic. It always forwards input via an event/callback system. It is isolated, knows nothing about the Model nor the Controller.Controller: Sits between Model and View. Does any data transformation(bussiness logic) that is necessary to get the data from the Model to the View. Does most data validation on input. It knows about both the View and Model."
    } ,
  
    {
      "title"    : "EasyMock for Unit Test",
      "category" : "programming",
      "tags"     : "language",
      "url"      : "/post/EasyMock-for-unit-test",
      "date"     : "2014-07-03 00:00:00 +0800",
      "content"  : "I noticed lot of projects code with unit test as a necessary part. Unfortunately that, I didn&amp;#39;t have the opportunity to do it myself. Upon coming out from the campus, it naturally become a necessary part of the carel talent of a SDE.Common and basic test procedure framework will be Junit, which lay the fundation of test. Such as @Before,@Test,@After workflow, Assertions, Test Runners, Ignoring, Rule. However, when encounter complex and sophisticated system, the dependency of functions may become perplexing. It&amp;#39;s impossible to construct all this objects as the input of a to-be tested function. Mock conception arise naturally. Well in plain word, could we just mock these dependency objects, give their input parameters and expected behavior or return value. And it just exactly benefit what our test case needed. There are lots of good mock framework, such as JMock, EasyMock. All roads to Roma. I spent about three days to learn the JMock for a particular unit test code. When I come from JMock to EasyMock, I found that most prior knowledge and experience can be come in handy. I take notes here as a reminder. 1. From scratch, I just know a little about junit. If I want to write tests for a class, the meta element for test is functions. So I need to construct the context for a function test, such as the corresponding main class, the input parameters for a test, external dependency objects need to construct. also the purpose of test, do we need to Assertions? and so on. 2. with these in mind, we need to test the functionality of the methods. Is it a AssertEqual(),AssertTrue(),Expected Exception? How could we guarantee the coverage? 3. How to mock the external dependency object. This is definitely a long story. Simplify by three steps, expect what the behavior and result, replay the workflow, verify the result.Reference1. JMock Website2. EasyMock Official3. EasyMock Control Tutorial4. JMock Tutorial"
    } ,
  
    {
      "title"    : "Study Notes Operating System Concepts",
      "category" : "work",
      "tags"     : "linux, interview",
      "url"      : "/post/Study-Notes-Operating-System-Concepts",
      "date"     : "2013-10-27 00:00:00 +0800",
      "content"  : "刚好最近在准备找工作面试无奈之前的基础知识已经遗忘殆尽值得在重新复习一下便做了关于操作系统方面的笔记书采用的是Operating System Concepts, 9th Edition采用边看边做笔记的形式来记录下以便以后遗忘时可以随时查验全篇将近有1000页不可能全部看完只得分批来看今天主要看进程模块Process(进程)程序的组成主要包括一下几个部分:* text section: it contains the program code, program counter and registers information.* stack section: it contains the temporary data, such as function parameter, return address, local variables.* data section: contains the global variables.* heap section: for dynamically memory allocations during the process run.Also the following figure show the common program structure in memory.   进程状态和进程控制块(Process Control Block)进程主要有如下几种状态分别为* New: the process is being created.* Ready: the process is waiting to be assigned to the processor.* Running: Instructions are being executed.* Terminated: the process has finished execution.* Wait: The process is waiting for some event to occur (such as an I/O completion or reception of a signal).And the following figure show the work flow of process state.进程的创建子进程创建继承父进程的资源信息接下来可以利用exec()函数来覆盖父进程的进程空间执行自己的进程也可以保持父进程的执行空间使的父子进程同时执行一个经典的创建多进程的实例如下#include &amp;lt;sys/types.h&amp;gt;#include &amp;lt;stdio.h&amp;gt;#include &amp;lt;unistd.h&amp;gt;int count = 0;int main(){    pid_t pid;    /* fork a child process */    pid = fork();    while(count &amp;lt; 10) {        if (pid &amp;lt; 0) { /* error occurred */            fprintf(stderr, &amp;quot;Fork Failed&amp;quot;);            return 1;        }        else if (pid == 0 &amp;amp;&amp;amp; (count%2 == 0)) { /* child process */            printf(&amp;quot;Child Execute: %d&amp;#92;n&amp;quot;, count);        }        else if (pid &amp;gt; 0 &amp;amp;&amp;amp; (count % 2 == 1)){ /* parent process */        /* parent will wait for the child to complete */            printf(&amp;quot;Parent Execute: %d&amp;#92;n&amp;quot;, count);        }        count++;    }    return 0;}进程间通信主要有两种常见的进程间通信的方式Shared Memory 和 Messaging Pass"
    } ,
  
    {
      "title"    : "Const Keyword",
      "category" : "work",
      "tags"     : "interview, language",
      "url"      : "/post/Const-Keyword",
      "date"     : "2013-10-22 00:00:00 +0800",
      "content"  : "const 关键词在C/CPP中也是一个类似于static一样经常出现且作用往往不止一种在面试中经常被问及的关键词我们从其修饰的对象角度来分析修饰变量或者指针int d = 4;const int a = 5;   /* the content of variable cannot be change */int * const b = &amp;amp;d; /* the variable pointer itself cannot be change */const int * const c = &amp;amp;d; /* the content and the pointer both cannot be changed */int * const b = &amp;amp;a  /*Compiler Error: a is const variable, while b is not, cannot                     convert from const int to int */此处有一点值得提及当用const修饰变量或指针时赋值时只能从非const变量向const变量进行而如果把const量赋值为非const量则会发生编译错误修饰函数1. 当用const放在末尾修饰类成员函数时其表明该函数不能够改变类成员的值如下#include&amp;lt;iostream&amp;gt;using namespace std;class A {    public:        A(int a) {            e = a;        }        int e;        void const_fun(int a) const;};void A::const_fun(int a) const {    cout&amp;lt;&amp;lt;&amp;quot;I am const function, cannot change variable content&amp;quot;&amp;lt;&amp;lt;endl;    e = a;  /* Compiler Error: cannot change value of member variable */}int main() {    return 0;}2. 当用于修饰成员函数返回值时则表示该函数范围值不能用于左值如下例所示const classA operator*(const classA&amp;amp; a1,const classA&amp;amp; a2);(a * b) = c;  /* cannot assigned to the return value of * operator */"
    } ,
  
    {
      "title"    : "Static Keyword",
      "category" : "work",
      "tags"     : "interview, language",
      "url"      : "/post/Static-Keyword",
      "date"     : "2013-10-21 00:00:00 +0800",
      "content"  : "几乎在所有的面试笔试题中都有static变量的身影其涉及到变量内存分配空间变量生命周期等最终我们可以从其作用域的角度来对其进行较为详细的分析与介绍函数体内的static关键字静态成员变量的内存分配空间是和全局变量的分配空间一样的都是在静态存储区所以变量的生命周期一直保持到程序的结束但由于该静态变量的作用域仍然是在函数体内所以在函数体外调用该变量会引起编译错误  在一个文件中的全局static关键字实现了一种类似类封装的效果在该文件中成员可以访问该static变量或是函数但是文件之外是不可以访问的在类中的static关键字static 成员变量:在类的作用域中是全局可见的且是唯一一份拷贝的static 函数 也是为类所有而非类对象所有且其只能访问static变量成员此处在类中的静态成员变量和成员函数的初始化也是非常值得注意的非const static 类型成员变量必须在类体外初始化且在类外初始化时不需要再加static关键词而对于类中的成员函数而言static function可以在类体中初始化   可以看下面一个简短的编译通过的例子#include&amp;lt;iostream&amp;gt;using namespace std;class A {    public:        const static int a;        const static int b = 4;        static int c;        static void print();        static void print_() {            cout&amp;lt;&amp;lt;&amp;quot;I am non static&amp;quot;&amp;lt;&amp;lt;endl;        }};const int A::a = 3;int A::c = 5;void A::print() {    cout&amp;lt;&amp;lt;&amp;quot;I am static&amp;quot; &amp;lt;&amp;lt;endl;}int main() {    return 0;}从作用域的角度来理解static变量便能够更加准确的把握其多层意义并在其中找出之间的联系"
    } ,
  
    {
      "title"    : "Virtual Function",
      "category" : "work",
      "tags"     : "language, interview",
      "url"      : "/post/Virtual-Function",
      "date"     : "2013-10-20 00:00:00 +0800",
      "content"  : "虚函数的作用虚函数是为了实现多态性而实现的更准确的说是为了实现运行时多态即dynamic binding的方法如下例所示#include&amp;lt;iostream&amp;gt;using namespace std;/* a simple example show the difference between the dynamic binding * and static binding. And common function override is a static * binding which aims to implement a common function in different * class. However, the virtual function is just aimed at interface-like * function. It implement the dynamic binding. */class shape {public:    shape() { };    virtual void draw() {        cout&amp;lt;&amp;lt;&amp;quot;Draw shoap&amp;quot;&amp;lt;&amp;lt;endl;    }};class rectangle: public shape {public:    rectangle() {};    void draw() {        cout&amp;lt;&amp;lt;&amp;quot;Draw rectangle&amp;quot;&amp;lt;&amp;lt;endl;    }};class round: public shape {public:    round() {};    void draw() {        cout&amp;lt;&amp;lt;&amp;quot;Draw round&amp;quot;&amp;lt;&amp;lt;endl;    }};int main() {    shape* s;    s = new rectangle();    s-&amp;gt;draw();    s = new round();    s-&amp;gt;draw();    return 0;}如果不用虚函数实现派生类中对于draw函数的overriding是在编译时根据所调用的类指针类决定并不能实现根据运行时指向的实际对象来进行调用而正是虚函数使得通过基类指针便能实现动态绑定因此上例的运行结果为Draw rectangleDraw round进化一 纯虚函数这种动态绑定的属性使得我们仅通过基类的指针便可以访问其派生类的某种方法因此在设计对象继承模式时便很常见了但是我们发现对于这种依靠基类来进行动态绑定的方法中某些基类的某种方法我们并不能实现如下面的例子/* Declaration from: * http://www.learncpp.com/cpp-tutorial/126-pure-virtual-functions-abstract-base-classes-and-interface-classes/ */#include &amp;lt;string&amp;gt;class Animal{protected:    std::string m_strName;    /* We&amp;#39;re making this constructor protected because     * we don&amp;#39;t want people creating Animal objects directly,     * but we still want derived classes to be able to use it.     */    Animal(std::string strName)        : m_strName(strName)    {    }public:    std::string GetName() { return m_strName; }    virtual const char* Speak() { return &amp;quot;???&amp;quot;; }};class Cat: public Animal{public:    Cat(std::string strName)        : Animal(strName)    {    }    virtual const char* Speak() { return &amp;quot;Meow&amp;quot;; }};class Dog: public Animal{public:    Dog(std::string strName)        : Animal(strName)    {    }    virtual const char* Speak() { return &amp;quot;Woof&amp;quot;; }};此处我们提及两点对于Animal这种类型我们无法对其的virtual方法Speak给出实现当用户定义一个Animal对象时如果调用其Speak方法我们无法实现这样一个方法或是只能空函数体则得到的是空结果或是非用户想要的结果则在某种程度是一种很不好的设计模式对于Animal类在某种抽象程度上对象本身是不具有意义的往往是一个抽象的个体罢了从语言理解的层面其往往是一个具有抽象概念的东西因此我们不应该允许其实例化故上面的代码对于其构造函数使用了Protected控制符上面的两种情况都可以利用纯虚函数的概念来解决其定义方法为virtual const char* Speak() = 0;而存在纯虚函数的类成为了抽象类不允许构造对象实例如此便进一步解决了这种抽象类中虚函数无法实现且抽象类不具有实际定义对象必要的情况进化二 接口类严格意义上来C++中并没有一个Interface关键词来提供这样一种接口功能但我们可以通过抽象类来定义通常而言接口类只提供一种操作原型的声明把具体实现指派到派生类从抽象的角度接口通常不含有具体的数据成员"
    } ,
  
    {
      "title"    : "Java Interview Question",
      "category" : "work",
      "tags"     : "language, interview",
      "url"      : "/post/Java-Interview-Question",
      "date"     : "2013-10-19 00:00:00 +0800",
      "content"  : "通常面试对于纯语言知识性的东西问的不算太多但是很多算法或者设计模式里恰恰需要用到一些经典的语言特征因此往往这类问题会作为面试开始时一个入门菜因此准确的掌握一些基础知识便尤为重要了  1. Java String 类的基础知识Q1: String 类到底创建几个对象String str = &amp;quot;Hello, World&amp;quot;;String str2 = &amp;quot;Hello, World&amp;quot;;String str3 = new String(&amp;quot;Hello,World&amp;quot;);String str4 = new String(&amp;quot;Hello, World&amp;quot;);A1: String 构造时如果是常量赋值的话首先会去常量Pool中查找是否已经存在常量如存在则直接把常量字符串的引用赋值便可如果不存在则需要在常量池中创建新的常量引用在赋值给变量的引用;而如果是new操作的化则是在堆中创建且每次都会新创建一个常量池中的对象然后在把这个对象用过new构造函数赋值给其在堆中的新对象所以答案为1122Q2:  String 中的== 和 equals操作符含义 str == str2 ? str equals str2 ? str3 == str4 ? str3 equals str4 ?A2: 通常对于字符串内容的比较我们通过equals()函数来进行而==运算符则是比较两个字符串引用是否指向同一个对象两者的区别用下面stackoverflow上的回答 因此答案为truetruefalsetrue2. Synchronized 类线程安全和效率的比较Q1: ArrayList, Vector and LinkedList 三者之间的区别A1: 可以从两方面来比较首先对于ArrayList和Vector其底层都是通过Array的连续存储空间实现可以按位快速存取但是当出入值时需要顺序后移因此效率较低而LinkedList则是用过链表的方式因此其插入效率很高但查找效率降低 然后如果单从线程安全的角度来看Vector是实现synchronized因此是线程安全但是却会因此降低了其效率引用JavaRanch上的一个回答Q2: HashMap 和 HashTable的区别A2: 可以从两方面来回答首先是线程安全的角度;其次是是否允许空值的角度而HashTable都可以看作是对HashMap的限制和提高因此HashMap是非线程安全的且是允许一个null键和多个null值的而HashTable是线程安全的且是不允许null值和键的最后可以从扩展性上来看如果想要默认插入顺序的可以选择LinkedHashMap如果想要线程安全的可以使用ConcurrentHashMap更详细的解答仍旧是看stackoverflow上的解答3. Overloading vs override in JavaQ1: Overloading 和 Override之间有什么区别A1: Overloading称之为重载通常是同一个功能的函数为了实现不同的输入参数个数和类型等需要在一个对象中定义的多个函数而Override则通常是存在与父类和子类中的同一个函数其参数类型和个数都相等在子类中对其重新实现且覆盖了原先的方法而Overriding通常有两种一种是vitual函数的overriding另一种是非virtual函数的overriding前者是一种动态的绑定而后者是一种静态的 具体区别如下"
    } ,
  
    {
      "title"    : "Retrospect With Cpp",
      "category" : "work",
      "tags"     : "language, interview",
      "url"      : "/post/retrospect-with-cpp",
      "date"     : "2013-09-27 00:00:00 +0800",
      "content"  : "Hello C plus plus1  const member function ** when a member function is declared as const suffixed, it promises that it will not change current class member2  vitural1 **member function must be declare and definition inside of the class body3  Inherit class construct after the base construct And destruct process, inherit class will be release first, and base class last And when we construct class with simple declare like Class name;, it means that we construct the class object in local function stack. However, if we use the new operator, the destructor function will not execute automatically4  One of the core technique in c++ is its STL(Standard Template Library) It defines most the whole basic data storage type across the whole c++ language And also"
    } ,
  
    {
      "title"    : "Learning With Amazoner",
      "category" : "work",
      "tags"     : "algorithm, interview",
      "url"      : "/post/learning-with-amazoner",
      "date"     : "2013-09-25 00:00:00 +0800",
      "content"  : "1. A Simple Algorithm for Print All Combination of Balanced Parentheses    #include&amp;lt;iostream&amp;gt;    #include&amp;lt;cassert&amp;gt;    using namespace std;    const int MAX = 20;    void print_bracket(int level, char out[], int n, int flag);    void print_bracket_v2(int n, int pos, int close, int open);    int main() {        int n = 3;        int flag = 0;        char* out = new char[2*n];        /* we can define a static char array inside the print_bracket function */        print_bracket(2*n, out, 2*n, flag);        cout&amp;lt;&amp;lt;&amp;quot;another method:&amp;quot;&amp;lt;&amp;lt;endl;        print_bracket_v2(n, 0, 0, 0);        return 0;    }    void print_bracket_v2(int n, int pos, int close, int open) {        static char output[MAX];        if(close == n) {            for(int i=0; i&amp;lt;2*n; i++) {                cout&amp;lt;&amp;lt;output[i]&amp;lt;&amp;lt;&amp;quot;&amp;#92;t&amp;quot;;            }            cout&amp;lt;&amp;lt;endl;            return;        }        if(open &amp;lt; n) {            output[pos] = &amp;#39;(&amp;#39;;            print_bracket_v2(n, pos+1, close, open+1);        }        if(open &amp;gt; close) {            output[pos] = &amp;#39;)&amp;#39;;            print_bracket_v2(n, pos+1, close+1, open);        }    }    void print_bracket(int level, char out[], int len, int flag) {        if(level == 0) {            if(flag == 0) {                for(int i=len-1; i&amp;gt;=0; i--) {                    cout&amp;lt;&amp;lt;out[i]&amp;lt;&amp;lt;&amp;quot;&amp;#92;t&amp;quot;;                }                cout&amp;lt;&amp;lt;endl;            }            return;        }        /* this condition filter the illegal bracket */        if(flag &amp;lt; 0) {            return;        }        out[level-1] = &amp;#39;(&amp;#39;;        flag++;        print_bracket(level-1, out, len, flag);        /* recover the modified flag */        flag--;        out[level-1] = &amp;#39;)&amp;#39;;        flag--;        print_bracket(level-1, out, len, flag);    }2. Find the Element Pair in Array with Sum Equals to a integer"
    } ,
  
    {
      "title"    : "Aterm On Desktop For Fluxbox",
      "category" : "work",
      "tags"     : "linux",
      "url"      : "/post/Aterm-on-Desktop-For-Fluxbox",
      "date"     : "2013-04-11 00:00:00 +0800",
      "content"  : "It&amp;#39;s an amazing thing to conquer the aterm, and make it stick on desktop obediently.The core of the entire process comes from how to make the aterm windows size on the desktop correctly. And I just find that It aways make me confused when I find the fluxbox options about the size of the windows on desktop cannot work.  Ok, let&amp;#39;s get the whole process from scratch.Install the Aterm terminal and Edit the .Xdefaults fileequo install x11-term/aterm or emerge x11-term/atermand make your own .Xdefaults configuration files.aterm*geometry:  80x60aterm*color1: #ff23and etc...Cofnigure Fluxbox app file to make the aterm sticky on desktop[app](aterm)[sticky]{yes}[layer]{12}[Hidden]{yes}[Dimensions]{900 710}[Position](TopLeft){5 5}[Deco]{NONE}[end]Common options like above. all these seems so easy done well.Ok, That&amp;#39;s all, you reload your fluxbox, and run the aterm, you will find the beatiful things on your desktoop. Yes, you are right.But, when you open the a large file which more than one page with vim editor like, the unfortunately things happens, the border of your aterm windows seems appearence. why? and How?Some small cares and tricky if you set the [Dimensions] options in the app file, you&amp;#39;d better comment your geometry setting in your .Xdefaults file."
    } ,
  
    {
      "title"    : "Gnome Icons Howto",
      "category" : "notes",
      "tags"     : "tips, linux",
      "url"      : "/post/Gnome-Icons-Howto",
      "date"     : "2013-04-05 00:00:00 +0800",
      "content"  : "Change Gnome Start-here Icons Howto.This is the basic configuration howto about change the gnome start here icons.Common two ways:to directly replace the original start-here png with the alternative one you like to do. as following:cd /usr/share/icons/gnome/24*24/places/mv start-here.png start-here.png.bakcp your-own-starticon.png start-here.pnggit-update-icons-cache /usr/share/icons/gnome/And then, just restart your X window, and Thats all.Another method is to configure the gnome configuration file to add your customize icon path. as following:open the gconf-editor tools and then select the apps -&amp;gt; panel -&amp;gt; objects -&amp;gt; object_3, and just check the use_costom_icon, then edit the key as your icon paths.  Thats all."
    } ,
  
    {
      "title"    : "Installation Mahout",
      "category" : "work",
      "tags"     : "research",
      "url"      : "/post/Installation-Mahout",
      "date"     : "2013-04-04 00:00:00 +0800",
      "content"  : "Wow, this guy is so lazy : ()"
    } ,
  
    {
      "title"    : "How To Share Project On Bitbucket",
      "category" : "work",
      "tags"     : "tools",
      "url"      : "/post/How-to-Share-Project-on-Bitbucket",
      "date"     : "2013-04-02 00:00:00 +0800",
      "content"  : "In the age of open source and could computer, it become very necessary for us to work together ou the cloud with anshare projects. Bitbucket provides an possibility for our needs.  this article is aim togive an simple introduction about how to share and collaborate on a project.Generally speacking, it mainly contains the following configurationn steps(I&amp;#39;ll assume that your os iswindows):Some Basic Configuration Steps1.  Install git for windows. just as the common way of install software on Windows,clickall the way.2.  After installing, you need to do a simple configure of git for your name and emails:git config --global user.name &amp;quot;Your Name&amp;quot;git config --global user.email &amp;quot;Name@example.com&amp;quot;also you can configure for you favorite editor or diff tools(optional):git config --global core.editor &amp;quot;vim&amp;quot;and you can configure your git to display with color:git config --global color.ui true3. then, you need configure ssh key for pull and push on the bitbucket repository. here, I already configure itforyou, and I will send to you by email, with usage attached. so just skip if you would care the configure details.otherwise, a tutorial here.4. now, it time to pull the repository down, just copy the following command, and execute it:git clone git@bitbucket.org:lengerfulluse/acl-multiling.gitafter the pull completement, you will find the directory acl-multiling in your current working directory. That&amp;#39;sthe repository on the cloud.Notice: you run the git clone command just for the first time you pull a repository. After that, every time youwork on the existed repository, the first step is to run the git pull to ensure that your repository is the already up-to-date.5. you can work on your local repository now, for example do some modify or add a file to the directory, afterthat you can check  what files you have modify or create:git status6. then you add the file and commit it:git add &amp;lt;file you modified&amp;gt;git commit -m &amp;quot;message you want to say about this commit&amp;quot;7. you can continue to work on the local repository and do the loop as step 5 and step 6. you can also nowpushyour current commit to bitbucket repository.  Also before the push step, you&amp;#39;d better do the pull operation againto ensure the newest status of your local repository. so you should do:git pullif there doen&amp;#39;t exist some emerge conflict, then:git pushThat&amp;#39;s all, it simply contains normal workflow loop. It is strongly recommended to read the great arts ProGit.Also we can do a simple demonstration together. Any prolem feel free to contact me any time.Some Conflict Screenshot and Howto Emerge Conflictgit push failuregit pull to emergecontent in a conflict fileReference[1] Generating SSH keys[2] _config.yml"
    } ,
  
    {
      "title"    : "Talk About Login Script",
      "category" : "work",
      "tags"     : "tools",
      "url"      : "/post/Talk-About-Login-Script",
      "date"     : "2013-04-01 00:00:00 +0800",
      "content"  : "It seems to be an unfinished wanted. From the begining of learning the computer language programmings, it is naturally to be taughted aboutthe story of great computer hackers. Among all of the cabaility owned by them , the most important one is to crawl on the complex and widelessinternet. So the automatic robot which wander freely on the internet become the greatest things for all the hacker. No matter how beautifuland effective a hacker&amp;#39;s code, It stills an sallow pain if they haven&amp;#39;t implements a internet robot programming, namely crawls.  Maybe thetopics about crawl will continue in the next sections because of the recently two important projects. (yes, I just assumed that you haveknown them ^_^, all right, exactly it just lie on my GitHub:byr-crawler.).  Now, letstart ourtalking from the most basic and important, How to write an simple login script.HTTP related protocol You should knowTo make my clarification more clear and systemic, maybe the current first thing is to know, what&amp;#39;s login script? why needs login script? howwe write a login script?Some Practical Clues You Should Gain From a Particular Gatewaythe login and logout gateway. The core of login script is to send the http request. Therefore, the http address provide the object we sendto. and because there often exist some different between the login and logout address. So you should first identify the correct address.the particular send data required from the vertification server for the login and logout. to more accuracy, the format of the date is thekey to implement the login/logout. Unfortunately, I haven&amp;#39;t konw the tricy to gain all this information, maybe the most efficient way is toview the post information from the browsers in a login request.  commonly, the username and passwd is neccessary, and the password often needsto do the md5sum process. also the entire connection strings is litte OPAC.the text process from the return http response informations. And in the situation of shell script implement, it cannot used somehigh-level data structure such as XML or JASON parser. the simple and effective method is text process, such as extraction, filtering, and soon. to get the success&amp;#92;failure informations returned from the response.ReferenceBYR LOGIN SCRIPT"
    } ,
  
    {
      "title"    : "Bash Note",
      "category" : "work",
      "tags"     : "tools",
      "url"      : "/post/Bash-Note",
      "date"     : "2013-03-30 00:00:00 +0800",
      "content"  : "Let&amp;#39;s just start from the practical bash examples. The problem is this: I would do some ideal summary for a set of newswires about a particular topic. for example every topic contains about ten documents, which each is about an specified aspect, also connected with the times sequences. However, the time orders about the topic is only embeded in the content of the documents. When you concatenate all this sub-topic documents into a large topic sets to so the following ideal summary task about the particular topic, you would be confused by the un-order docment sets.And that&amp;#39;s just what the point we aim to solve.Particular and Important ScriptAlthough shell script are almost the same in essentials while differing in minor points. To ensure the accuracy of this article, I just decide to limit my note about the shell script on the bash shell. Therefore, the position of this post is aim to get some conclusion about the experience during the usage of the bash script.It&amp;#39;s definitely an amazing thing that when you feel that you are just write beautiful code skilfully. Especially that when you encounter a pariticular problem ,and you find that it can be resolved by the computer elegant and high-efficiency. That&amp;#39;s the origin of the sense of achievement.  Now, let&amp;#39;s cut the cackle to just begin our particular requirement and resolution.First we need to divide our problems into some basic modules. they mainly contains three modules: method to extract the date in the documents; formatted the date from the extracted data string; sort and concatenate the date, generate the results.Normalized the Text and Extract the date StringDuring the process of hummanic translation from english to chinese, we conduct our work by three groups of people. and due to the discrepency of encoding system of ther editor, the result files contained incongruous encoding such as UTF-8 encoding, UTF-8 BOM encoding, ascii encoding and so on, so the first things I need to do it normalize the while encodings of the translations files. Therefore, I just write a simple script to check the encoding of files, and find the unmatched encoding, and then to converted them automatically or manually.Then, There comes the steps of extract the date string from the translated texts. the first things to do is to delete the blank lines in the texts. this tricky is also very important. it makes me re-relizes the function of sed to execute some other command, such as deletion, except for the common used substitued operations. And following the compress blank lines process, I adopt the grep -o option to extract the date information from the strings. also I learning about the array construction method through the bash substitution operations. It make me notices that some useful bash test conditions such as -z: stands for empty. -n: stands for empty string. also the iteration methods of array for file in ${array[@]}, also some logic operations. ! and -o, -a. One of most important may the usage of functions. how to defintion a function in bash, and pass paramters to the function and return values from it. Morely, such as the local and global variables.All in a word, I feel that this attemption just make me write code more easily. Also the standardlize of write code is the most important things I should develops.  Just write the code like compose a poem.  That&amp;#39;s the philosophy of Perl languages.Sort accroding to the dateThe last things to do is just sort the extracted date which belongs to corresponding docs in a particular topics. Here, I also find that the most ultimately and effective methods to learning the usage of sort. And all these things cannot not be finish once. And since you have encounter before, you should find that only by the combination of sytemic learning of the tutorial with the practical problems resolution you can truely master the essentials. And that&amp;#39;s the different of proficient and possibility.ReferenceAdvanced Bash-Scripting Guide"
    } ,
  
    {
      "title"    : "Systemic Learning",
      "category" : "work",
      "tags"     : "linux",
      "url"      : "/post/Systemic-Learning",
      "date"     : "2013-03-28 00:00:00 +0800",
      "content"  : "The pain on the installation of FreeBSD system fonts during my collegelife still exists. It is still impressive that I was totally confused bythe all series unttacked of the sytem fonts settings and the Chineselocalized. I become suddenly hopeless.However, today, when I come back to re-learning the X window systemsettings by the Xorg tutorial, It suddenly become clear extremly. I justget the conclusion that systemic learning is thousand more importantthan the trivel experience, if we only consider the time and efficiency.the global logic clue in our brainThe comprehensive understanding about somethings come with a globallogic clue graphy in our brain. We get clear of the principal and theimporant process or steps to achieve the finally results. In the case ofthe complex or large system, we cannot grasp the whole, we need theinductive process, and gradually combined all the trivals understandsto a whole entires.  In most time, We are accustomed to gain ourknowledege from the whole to the detail parts, which is calleddeductive."
    } ,
  
    {
      "title"    : "Localize Setting",
      "category" : "work",
      "tags"     : "linux",
      "url"      : "/post/Localize-setting",
      "date"     : "2013-03-28 00:00:00 +0800",
      "content"  : "What&amp;#39;s locale? basically, locale is all the information about your geography postion, such as which country you are? what language you use?and of course contains date time format, moneny currency format and so much information. With the tendy of software internationalize, thespecific localize for specific local users become urgent and necessary. All above is what locale is responsible for.  Ok, let&amp;#39;s get start.Locale Type and Environment VariablesThe introduction part generally describe some aspects about what particular a lcoale seems contains. and As we know, all these have theirstandard definition, context and content details. For the locale, the ISO files have the regular and comprehensive definition. It may containthe following aspects and in unix-like system, It&amp;#39;s demonstrated as Locale Environment Variables.- LANG the default definition for all local settings at once. while allowing the further individual customization via LC_* settingsbelows.- LC_CTYPE define the character handling properties for the system. The determines which characters are seen as part of alphabet, numbericand so on, This also determine teh character set used, if applicable.- LC_COLLATE define the alphabetical ordering of strings. This effects eg. output of sorted directory listing.- LC_MESSAGE Programs&amp;#39; localization for applications use message based localization.- LC_MONETARY define curry units and formatting of currency type, numberic values.- LC_NUMBERIC define formatting of numberic values which are not monetary.- LC_TIME define formatting of data and time.- LC_... main contains other setting.- LC_ALL A special value to overriding all the above settings.The linux system self provide a lot of locale for almost all of the countries and regions. the specific locale directory is/usr/share/locale/, which provide the locale resource files. By default, all kinds of locale contained Here.Setting localeThe first step of settings is to know what locale our system current use. Here we need the locale command. which is used for getlocale-specific informations.If we want to know what current locale our system support now, we should add the -a options for the localecommand. If you find that there doesn&amp;#39;t exist the locale you wanted , you should generate the locale by yourself. which contain two steps:1. edit the /etc/locale.gen configure file to add the locale you want.2. run the command locale-gen to generate the locale.Now, since we have generate the locale we need, we need to setting the locale. Like common linux configure sytles, almost every configuresettings have the different apply range. namely the system-wide and personal user settings. and no exception for the locale. there are twochoice to setting the locale. if you want to settingt the system-wide, you can edit two setting files.    /etc/env.d/02locale --&amp;gt; LANG=&amp;quot;enUS.UTF-8&amp;quot; for instance.    /etc/profile --&amp;gt; export LANG=&amp;quot;enUS.UTF-8&amp;quot; for instance.and for user specified range.    $HOME/.bashprofile --&amp;gt; LANG=&amp;quot;enUS.UTF-8&amp;quot; for instance.Of course the above just simple give a simple example, you can give a specified setting for LC_* Variables for yourself."
    } ,
  
    {
      "title"    : "Fcitx And Fonts Setting",
      "category" : "work",
      "tags"     : "linux",
      "url"      : "/post/Fcitx-and-Fonts-setting",
      "date"     : "2013-03-28 00:00:00 +0800",
      "content"  : "The purpose of this note is to analyze the steps for setting chineseinput method Fcitx in an English systemenvironment.English Environment for FcitxIf you just Google the articles about installing the fcitx, almost mostof them we noted that, you must setting the LC_CTYPE to zh_CN.UTF-8locale as the prerequisite. Unfortunately, it is wrong, or partly wrong.Allthough fcitx cannot run on POSIX and C locale, But, it can run on theen_US.UTF-8 locale settings. And it can provide you the same englishenrionment.Fcitx Environment VariblesThere are mainly three important environment variables, they are:- XMODIFIERS it connects only to the im module. and common setting asthis XMODIFIERS=&amp;quot;@im=fcitx&amp;quot;- GTK_IM_MODULE setting the im select for gtk programs. notice thatonly your fcitx compile USE flag contains gtk, gtk3, you should set it:GTK_IM_MODULE=fcitx, otherwise for common gtk2 programs,GTK_IM_MODULE=xim.- QT_IM_MODULE setting the im select for qt programms. the same fromthe above, you should set QT_IM_MODULE=fcitx only you USE the qt4flag. and common situation is QT_IM_MODULE=xim.Yes, All about this, for startx command, you should putting the aboveenvironment variables in .xinitrc. if you use Slim, you could put it inthe xsessions files.  Provided that You locale is not POSIX or C, itwill works.Install fonts on Sabayon(Gentoo) manualFirst you should copy the fonts into a system fonts directory oruser self-definition directory.  And if you use the self-definitiondirectory, you should add the FontPaths directory in the xorg.confdirectory.Second, you need to enter the font directory, and construct thefonts.scale and fonts.dir files for indexing of fonts. with thefollowing commands.mkfontscalemkfontdirFinally, we need to reconstruct the fonts cached with commandfc-cached -fvAfter you reboot the X system, you could use the command fc-list | grep-i font-nameAnd that&amp;#39;s all."
    } ,
  
    {
      "title"    : "Fluxbox Installation",
      "category" : "work",
      "tags"     : "linux",
      "url"      : "/post/fluxbox-installation",
      "date"     : "2013-03-26 00:00:00 +0800",
      "content"  : "I have mentioned a little about the configuration process related to the lightweight Desktop Environment or some kind of full-functional Window Managerment. It&amp;#39;s extremely a bit lucky that I could have encountered theFluxbox. It&amp;#39;s almost the same situation as my dating with Sabayon Linux. One day, I suddenly miss the lovely gentoo linux, so I open mygoogle plus homepage, and search gentoo&amp;#39;s current release news. It&amp;#39;s definately amazing that the second result of the gentoo query term isabout a lovely logo, which like some animal&amp;#39;s foot surrounded by a circle. After search it in wikipedia, I found that it&amp;#39;sthe honey sweet foot of gentoo penguin. As for the Fluxbox, you couldn&amp;#39;t imagine that it&amp;#39;s almost the same situation. Let&amp;#39;s start ournarrative with the completion of Sabayon linux. I first choice the default Gnome Desktop envrionment, and everythins seems just work properly.However, when I tried to change the backgroud of the desktop theme, I found I cannot open the setting panel with the right click and selectionof change desktop background item. After that some other symptoms continues one by one. For instance, There doesn&amp;#39;t exist System menu in theGnome default taskbar panel. and I cannot use the function of user system settings in my account applet.   So I decide to remove gnome andstart something new, such as KDE or xfce4 etc. But at the same time, I found that it&amp;#39;s not an easy thing to remove the gnome environment andinstall some new desktop environment due to some fuzzy and frustrating depencdency considerations. So I log out the Gnome and back to the GDMlogin manager to see whether there are some other Sessions for selection. Bla bla bla, Fluxbox has just been waiting for me. Great, It&amp;#39;s You.Configure FluxboxThe main confiugre file is under the user&amp;#39;s Home directory, which is adopted a common configure style .fluxbox/. and it contains all aspect ofthe fluxbox, from the start application with fluxbox, to the menu item selection, windowmenu, keyboard shortcuts and background of thedesktop.  I&amp;#39;ll list below and give a detailed explanations.    .    | --"
    } ,
  
    {
      "title"    : "Xorg Configuration",
      "category" : "work",
      "tags"     : "linux",
      "url"      : "/post/Xorg-Configuration",
      "date"     : "2013-03-26 00:00:00 +0800",
      "content"  : "In this article, we focus on some basic and foundational introduction about the X11 related topics in our linux experience.Xorg ServerThere are mainly two sub-sections in the Xorg Server section. firstly, I will conduct some introduction and explanation about the history and roles Xorg take in our hole GUI system. secondly, I&amp;#39;ll give a practical example to show the process of problem trackback and solved.Login Manager or Display ManagerTo some kinds, when you setup the xorg server and install the Window manager or Desktop Environment you could start the X11 system with just a command start x. But if you want the show the GUI graphic system all the way, and you won&amp;#39;t want to start the x system in console, you need the help of Login manger, the default login manager for the Gnome is gdm. and correspondly, for Fluxbox, the slim is an ideal choice. Just with these simple line, you could use it.equo install x11-misc/slimvim /etc/conf.d/xdmand the make the change of the following:, which is the core of choice.---DISPLAYMANAGER=&amp;quot;slim&amp;quot;---finally, you should add the xdm to default run-levels.rc-update add xdm defaultAfter finish the basic configure for the slim, and set the/etc/conf.d/xdm variable, we should be able to login our personal Xsession with the default themes in the /usr/share/slim/theme.However, we should notice that the /etc/slim.conf configure script file will automatically read the /etc/X11/Sessions/ directory tofind the default multiply Session, so when you login in with the slim, you could select your particular session with a simple F1 key.Otherwise, if you want to set the default session environment, the simplest way is just:ln -s /etc/X11/Sessions/fluxbox ~/.xsessionAnd let&amp;#39;s conclude the above process. Simplely, if we want to create a X window system with Xorg server, what exactly methods we need to docontains only three steps:Install the Xorg server related source and config for them.Setting the kernel support for the input and video driversupport. here we should notice that there exists some problems compatiableproblem related to the lagecy video drivers with the KMS(Kernel ModSet tenique), so we should first disable all of the driver for the video.and then select the proper &amp;quot;nouveau&amp;quot; or &amp;quot;nvidia&amp;quot; drivers. and the &amp;quot;endev&amp;quot; input driver.Istall the related driver as listed above and set thecorresponding support for the KMS technique.equo install ${qlist -CI x11-drivers} * Install the Xorg server, and further configure manually.equo install xorg-server * configure the /etc/X11/Xorg.conf.d/ directory files. for thekeyboard and Screen resulations. * Verify the successful installation of the xorg with commandstartx, for abvious and essy test setting, you can first installsimple xterm and twm to test the xorg&amp;#39;s installation and configuration.Install a window manager or desktop environment. After you canvalidate the success of xorg server, the next thing you should complete is toarrange a slave for the xorg-server boss. And the xorg just assigns lots of dirty and hardship work to it&amp;#39;s slave, namely window manager, ormore functional Desktop environment. Formally, window manager is a kind of programs which are reponsible for the arrangement, sechdule andposition of the GUI programms. Here I will just install the most famous lightweight, Fluxbox.equo install fluxboxand after its installation, you can just configure it&amp;#39;s behaves accroding to the conf.d in &amp;#92;$HOME directory ~/.fluxbox. such as you cansetting the global keyboard shortcuts, the menu content, the wallpaper, the slit and of course the applet widget in the taskbar slit. Choose your favirate Login manager. Yes, don&amp;#39;t take it for grant,allthough there will be no any problems if you type the command startxand following by the command startfluxbox. or more simplely to edit the .xinitrc file in your home directory to add the &amp;#39;startfluxbox&amp;#39;command in this. however, leave no consideration for the issues of security from the terminal, if you just do your daily work in X windowenvrioment, it becomes naturally that there is no necessary for the intermediate steps for execute all this command in console. That&amp;#39;s wherethe Login Manager benifits for.  the configure step has just been demonstrated above, we&amp;#39;ll leave no more words here.Xorg TroubleshotingsOne of the most important reasons that Xorg server confuse people is that its huge and compliated contents and terminology conceptions, whichall are almost divert us away. also the whole installation process is automatically done, so once there encounters some problems, It&amp;#39;s justterrible, and in most situation, people would select install the whole system. ^_^. I am at least. I always wonder that when I could resolvethis problem myself, here today, I came over a startx failure, and after some dianostic, I finish it eventually.  Here I note some basic andimportant steps:- You&amp;#39;re aim to solve the problems: the first and the only step is to analyze current problem. What&amp;#39;s the symptoms of the problems, isthere some log or error output? how many possible reasons for this/these symptoms? what&amp;#39;s the most possible one?- Be careful and most selective for the search keywords when Google, also you should first finish some basic background knowledge learnint tohave a better understanding of the problem.- Do necessary backup work. when you attempt to some possible solutions for the problems, you&amp;#39;re experiment on the system, back up theoriginal version files or programs, before you do every dangerous things!!"
    } ,
  
    {
      "title"    : "Sabayon Linux Fresh",
      "category" : "work",
      "tags"     : "linux",
      "url"      : "/post/Sabayon-Linux-Fresh",
      "date"     : "2013-03-25 00:00:00 +0800",
      "content"  : "When Gentoo beckons to you, follows him. Though his ways are hard and steep.Thanks for the instruction from Ryan Li at RedHat Co.td during my internship, I stepped on a nicejournal companied by Gentoo linux distribution. If it moves, Just compiles it. All the way, I finally understand the reasonwhy lots of guys are so addicted by the linux, by gentoo linux respecially. Althought the journal is full of uncetain hardships, The excitingof achievement is beyond all these things. When you came over all the way, I can have fruitness harvest which are not only the knowledge orsome cool skills you got, But another most important things in your life,  the courage to conquer every things, the belief to complete tasksefficiently and perfectly. If we compare life to be a war, It is the wapean that determines the success or failure. Similarly, proper toolsfor our daily work is extremly improtant, I used to be curious about every linux distribution, for instance, Ubuntu, OpenSuse,FreeBSD, Backtrack, ArchLinux, all for the desktop environment too, Gnome, KDE, Xfce, Awesome etc. not to say alot of application tools, shell and so much others. However, it&amp;#39;s just to be dispointed that I just cannot stop my step to get further on someparticular useful tools. Exactly, I was always too shallow.One of my shortcomings is that I cannot pay attention on the same things for a long time. Bla bla bla, yea, you are right, it&amp;#39;s just like achild, right? To be honesly, this habits frustrates me all the time. In the other hand, it&amp;#39;s the necessary quality for the exploiters. It&amp;#39;sbecause of this, that I have the opportunity to explore a lot of amazing zones of the linux world.Yes, it is the first time I encounter the sabayon linux distribution. yesterday, I miss the Gentoo so much, so I logged into my Googleplus account, and enter the search bar to find some interest news about the gentoo, It&amp;#39;s amzing that the second result of my query is sabayon,I was very curous about what a kind of distribution it is How can it display here?What distinguish a different distribution for meI admit that what a linux actually attracts me is just about two aspects:- theme&amp;amp;appearence You may think that this is a so shallow point, yes, it does. I come contacted with linux since when I was a freshman inNUPT. What attracted me a lot lies in that the compize&amp;#39;s cool cubic destkop effects. However, I don&amp;#39;t like it&amp;#39;s themeappearence, So in the next tries, I try other linux distribution mentioned above.- mirror source&amp;amp;package manager It means that how convient it bring to you. Imagine that when you want to install a software for your work,Some basic configure for Sabayon installationGit configure and SSh protocol configure:&amp;gt;   git config --global core.editor &amp;quot;nano&amp;quot;&amp;gt;   git config --global user.name &amp;quot;Joseph Heng&amp;quot;&amp;gt;   git config --global user.email &amp;quot;lengerfulluse@gmail.com&amp;quot;&amp;gt;   git completion bash. we add it in .bashrc with command source ~/.git-completion.sh&amp;gt;   copy the private, public keys and known_hosts to the ~/.ssh directory.Select the faster mirror for the package update and source download, first you should know where the repositories list lie in:/etc/entropy/repositories.confthen to test the connection speed of these repositories, and then choose the faster.  equo repo mirrorsort sabayonlinux.org   # for Daily reportory  equo repo mirrorsort sabayon-weekly     # for Weekly reportory  equo repo mirrorsort sabayon-limbo      # as limbo implied, the test reportory. Be careful to use!!!Equo Update and install:equo update  equo install entropy rigoKeyboard Shortcut:bind the Alt+T to open a terminal  bind the Alt+J to switch the terminal to previous tab  bind the ALt+K to switch the termianl to next tab  bind the Meta+D to display the desktop.Be familar some basic package manager tools:equo [search install ...]  rigo GUI entropy manager tools.  eselect  emergeMigrate from Gnome to FluxboxOccasionally, I find the install bugs during my sabayon installation, the results is that my Gnome 3.6 version cannot function well. To be disspointed, the System menu just gone. and some menu panel and desktop background missing too. Hey, hey, hey! A sound reminds me that I still have another default selectioon for desktop windows manager: Fluxbox, It&amp;#39;s Great!The core configure directory directory is ~/.fluxbox, and that&amp;#39;s all."
    } ,
  
    {
      "title"    : "Web Application Framework",
      "category" : "work",
      "tags"     : "language",
      "url"      : "/post/Web-Application-Framework",
      "date"     : "2013-03-24 00:00:00 +0800",
      "content"  : "Last week, I was always busy with learning a new programming language Ruby and was attracted by it&amp;#39;s so much cool features. And of course, it&amp;#39;s philosophy of design. It&amp;#39;s aim to write a language for programmers, but not the computers. It&amp;#39;s many global symbol system, it&amp;#39;s fancy different but meaningful indicators for funtions. It&amp;#39;s functional features like lambda and proc class. It combines a lot of features like python, perl, shell, awk, Java, C++ for instance.Also, to see the power of ruby language, I try to construct a ruby on rails web application framework. Up to here, I come into contact with the conception of web application framework. I try to connect my previous knowledge about the web development related work with all the development tools I used before. Such as Spring Structs and Hibernate, Python web.py, including this, Ruby on rails.Features on WAFWeb template system"
    } ,
  
    {
      "title"    : "Art Of Arrangement",
      "category" : "life",
      "tags"     : "lankar",
      "url"      : "/post/Art-of-Arrangement",
      "date"     : "2013-03-21 00:00:00 +0800",
      "content"  : "A very little things happens today that everybody may encounter and may even not to  mention it. My mental ask to find the previous project&amp;#39;s source programming, which maybe re-used in our current&amp;#39;s project. Accidently, I have no idea where this source I put it. After doze of endeavours, I gave up, and of course felt very dispointed the whole day. I retrospect my this horrible habit, that leave the staged things away. I get the conclusion that I would never re-use or do some back-review work on this done things in mostly situations. And to some exents, except the remain knowledge in my brain, I could hardly adopt any excellent methods or design which is perfectly completed before. In other words, I often tend to reinvent the wheel.Horrible HabitsRemember that when I was just a little boy, my grandfather often told me that How important to form the habit of arrangement. Arrangement of our daily events and our mind. However this simple but also profound words almost don&amp;#39;t have any influence on me. from the kidgardon time to the high school age, all the whole of my life and study is just benifited from brain and not to bad memory. Unfortunately, with the increase of our ages and the extend of our life, the knowledge grow rapidly. The big bang of our knowledge make me unpromising and hopeless to my self. It&amp;#39;s a long time before I could came over my un-believable of capability. Until that, I still didn&amp;#39;t recongize it is exactly the inadequate methods that prevent me from my ideal success. In one words, I didn&amp;#39;t know how to study and work efficiently. I was eager to seek new and curious knowledge and tools, but never come back to think the practical meanings and effect behind it.Knowledge and Capability Come from ArragementNo one believe that if you own a book, you know all the knowledge and lessons in that book. your knowledge is not decided by how many books you reads, but how much you learn from them. Our brain like all logic and sequece things, it hates unsuitable tedious and dirty. If you put a lot of unrelated or unsorted things in your mind,  it will easily got confused and even refuse to work for you. the spirit or nature of arrangement and category is exactly to make logical sort for our brains. Our brain tends to connect the new isolated knowledge node to the exist large net of knowledge. Knowledge is power, of course, knowledge rise capability. An important approach to improve our capability lies in form the habit of make arrangement for our brain.Some Useful Approach or Tricky TipsFrom a perspective of a techniquer, Our whole time commonly is dedicated to three things. Our work, here I refer to the true and real work, which we like it and enjoy the moment of working. Our daily Transaction, people&amp;#39;s social property determines that It cannot be avoided to do some daily personnel or social things. The last one is our life which is also the important part besides our work.Tonight, I just discuss the first part, namely arrangement for my work. Every things in our work, we should do some principal or common resolution to simplify our daily life.- Software  Exactly, It cannot be avoided that we need do a lot of programming working in our daily project work. Therefore, it is naturally will have a ot of finished or unfinished software, which contain the source code itself, als related documents, material, data sets or other project-related  things.- Learning Material Knowledge grows every moment, You will leave the queue if you stop learning. There learning material mainly contain some tool-like material, such as language learning tutorial, some useful utilies or tools in our daily tasks, such as markdown language, LaTex for typesetting, even Vim manuals.- Research For a schalor, or a master student, We should have our own research fields and interst research directions. It distinguish us from the college students or others. For the research parts, we should put attention on the algorithms and it&amp;#39;s implementation methods or tools."
    } ,
  
    {
      "title"    : "My Vim Manual",
      "category" : "work",
      "tags"     : "tools",
      "url"      : "/post/My-Vim-Manual",
      "date"     : "2013-03-20 00:00:00 +0800",
      "content"  : "Love is definitely amazing thing! ^_^, A ha ? Penny.I become to enjoy the writing and thinking time, when the light is  turn off. My heart is warm, and mind is clean, the whole circumstation is just right, except my pumble poor english represion. All right, lets take the driver, go!My Vim NoteI choose the excellent vi&amp;amp;vim editor since the first time I got contact with Linux OS. the just perfect j, k, h, l keys, all the scenes are so beautiful! I like the spirk learning curve, which discourage the weak, but encourage the brave man to walk the nice travel of a new world.Cursor movementw - jump by start of words (punctuation considered words, etc. word, two words: word and ,)W - jump by words (spaces separate words, etc. word, one word: word,)e - jump to end of words (punctuation considered words.)E - jump end of words (no punctuation)b - jump backward by words(punctuation considered)B - jump backward by words(no punctuation)0 - (zero), start of line. which is very practical.Note: Prefix a cursor movement command with a number to repeat it.Insert Mode -Inserting/Appending textea - append at end of word. the same to bA, append start of words. Amazing combining commands.##### EditingJ - join line below to the current one.cc - change(replace) the whole line.cw - change(replace) to the end of word.c$ - change(replace) to the end of line.s - delete character at cursor and substitute text. compare with rS - delete line at cursor and substitute text. (same as cc).##### Cut and Pasteyy - yank(copy) the whole line.yw - yank(copy) the whole word.y$ - yank to end of line.##### Search/Replace*:%s/old/new/gc * - replace all the old with new throughout file with confirmations.##### Working with multiple files:e file - Edit a file in a new buffer.:bnext - go to next buffer(or :bn ).:bprev - go to previous buffer( or :bp).:bd - delete a buffer, namely close a file.:sp filename ** - open file in a new buffer and split window. **This command is useful.Ctrl + ww - switch between windows.Ctrl + ws -split windows.Ctrl + wv -split windows vertical.Ctrl + wq -close windows."
    } ,
  
    {
      "title"    : "Py  Search",
      "category" : "work",
      "tags"     : "language",
      "url"      : "/post/py-search",
      "date"     : "2013-03-19 00:00:00 +0800",
      "content"  : "HOW TO py-searchimplemented by python to create an integrated search engine module, including crawler, indexing&amp;amp;search, web interface.Main Three Modularindex-creator from database.search modular with Whooshweb interface GUI with web.py template.kylin desktop search application. *Here, we supply the query results sorted function *Source Directory.|-- **indexer_from_db.py**: creating index from database.|-- **searcher.py**: main search api.|-- web/|-- |--code.py: python servlet for web.py|-- templates/|-- |--index.html: web interface for user query input.|-- gui/|-- |--kylin-desktop.py: main desktop application.|-- |data-index/: index data files.|-- README.md|-- README.txt: same as above.|-- kylin-desktop.py: same as web directory|-- web-gui.py: same as code.pyCongiure &amp;amp; Install   mysql-connector-python-1.0.9-py2.7.msi install   install setuputils through ez_setup.py, and then add Script subdirectory in python install to env variables.   install Whoosh 2.4.1 with the easy_install.exe tools  install web.py with easy_install for web front end display.  install xlwt package for write results to excel."
    } ,
  
    {
      "title"    : "Perl Python Ruby Note",
      "category" : "work",
      "tags"     : "language",
      "url"      : "/post/perl-python-ruby-note",
      "date"     : "2013-03-19 00:00:00 +0800",
      "content"  : "Fortunately, I still keep passion about the new things. Especially for the programming languages. from the moment that I first met c language, I wonder whether other various language look like. are they also static strong type? Are they have the unpleasant points? Are they contructed by the function invoking and variables? Are they general purpose or somethings like shell script? All in all, I seek for other interesting features in other language. In a word,  I attempt to find somethings common points and different parts respectively.&amp;quot;All Language are just tools to solve problems&amp;quot;What a  concise summary! languages are just tools to solve particular problems. On one hand, Allthought each one has merits and its area of expertise, you can just show the most suitable for the specific problem. On the other hand, all roads to Roman. Classical book SICP tells me that except the essential programming paradigms difference under the two branches of functional and imperative, all their sub-branches share lots of commons. the only main difference lies in the discrepancy of syntax sugar. For instance, their all have basic and similar syntax. basic data type(though may distinguish between strong and weak type, dynamical and static), Conditional statement(though it seems little different, such as if else for C Java, if ; then elif done for shell, if : for python. ), Control flow (such as for loop, while loop, break, continue), also some basic data structure, such as array, list, hashmap ( or dictionary in Python and Perl). also some basic function( no matter it&amp;#39;s member function of OO language or function), And also the most important part is its function library(C,C++) or Package(Java) or Module(Perl or Python).However, In some kinds, you can also think that the above things is just touch the superical part of languages. Because You can&amp;#39;t become an experience and professional programmers with just that. As an chinese old sayings: a man can lead a horse to the water but he cannot make him drink. For the practical enterprise project development, there are often two focus: the develop efficiency and quality of product. there are lot of principals and conventional. it is that distinguish the normal and professional programmers. these potential things can alos thought as something like design pattern and software engineering.All right, we get involved too much.Intersting features borrowingTo design a language is to shut oneself up in a room making a cart, they all borrow a lot of  excellent features in exising languages. For instance, Perl borrows features from other languages including C, shell scrpting, AWK, sed. which obviously will provide it great power in the text processing applications tasks.Python&amp;#39;s design philosophy emphasizes the code readability.Ruby is a dynamic, reflective, general-purpose pure OO languages that combines syntax inspired by Perl with Smalltalk-like features. It also was influenced by Eiffel and Lisp."
    } ,
  
    {
      "title"    : "About Gui Programming",
      "category" : "work",
      "tags"     : "language",
      "url"      : "/post/About-GUI-Programming",
      "date"     : "2013-03-18 00:00:00 +0800",
      "content"  : "I couldn&amp;#39;t remember what&amp;#39;s exact the time, when I begin learning to do comparison between different but similar things. there is obvious no exception for the computer programming. Especially for GUI programming.Since GUI RoadI do remember the sence that when I first met the GUI programming. It laid a deep impression on my mind. Since then, you recognized that you can do such beautiful and professional(seems like) windows interface yourself.Just like many modern normal college students, the materials where you first encountered programming are basically textbook. As a consideration of your low-level computer skills, Unix-like OS just makes most people tedious and be kept away naturally.One of most important member in Windows eco-systems, MFC become my first station in GUI programing travel. Before that, I were very curious about the principal of how can people can implement such complicated windows system with just simple syntax of program languages. How just all that things works!  So, in summar of 2009, for the sake of Image CUP of NUPT, I begin a nice travel with about one month time. How perfect that time!Last year, I gave another attempt about GUI in java awt and Swing framework, the whole process is surface and short. Except that I was tried by all these framework and their logic relations and event sequence.Recently, It&amp;#39;s maybe partly caused by the great intrest about Python language, it&amp;#39;s nice syntax and board applications programming fields appeals me a lot.  So when encount the same situation of indexing and searching modualr implementation, I just truned around to another new pypass. I decided to try something new, wxPython GUI framework. To be honestly, It&amp;#39;s not an easy way, which makes me rethink the natural things about the GUI programming themselves, not just the personnal detailed modular or funtions.A good story just starts...App or Window or DocumentNoted here. In my superficial experience, there are two main basic components in common GUI programing. the App and Window, the former is responsible for the entrance of whole programming, the invoke of windows event loops. In other words, you can regard it as working background. And the latter is window, namely graphic user interface, which show applications&amp;#39; appearances. it interact with user, recieve user response and respond results back to the user through the GUI demonstration too. If we dig it deeper, we can find the key roler laid in the window contains the various of window Widgets (which layout frame or container) and Event Bind and handlers.Equipped with above two weapons, you could finish some basic and simple tasks, whcih rely on some not so complicated dialogs or widgets to show or interact with users, even in the age of user experience first. However, if you want the whole object storage or realtime user interaction operation, such as text/word processor, games applications, You just hit the skin. Document can be viewed as a store or serialize object, which is in charge of the data management. It also manage partly the communication between the data and methods.For Complicated Logic Relation in GUII found it just very difficult to grasp the whole skeleton of the GUI programming. Put simply, it means that when you sit at your computer, open your favorite editor(Vim for example) or other popular IDE environment, you just become confused. Where should I start from? There exists a lot of tool-tricy logic sequeces in the whole programming procedure."
    } ,
  
    {
      "title"    : "Learning Wxpython",
      "category" : "work",
      "tags"     : "language",
      "url"      : "/post/learning-wxPython",
      "date"     : "2013-03-11 00:00:00 +0800",
      "content"  : "For a part of project, the demands for the gui interface enforce me to find a simple and flexibile toolkit-like to develop a desktop programming. the two main choices are the Swing and wxPython. The java things bores me a lot in before. So I decide to try something new, since I have a lot of interest in python recently.Modules introductionwxPython is a cross platform toolkit for creating desktop GUI applications. the principal author is Robin Dunn. wxPython consists of the five basic modules..|-- Controls: provides the common widgets, such as Button, Toolbar.|-- Core: consists of elementary classes. Object, Sizers, Events.|-- GDI: used for drawing onto the widgets.|-- Misc: various other classes and modules. logging, configuration.|-- Windows: consists of various windows. Panel, Dialog, Frame etc.Widgets are called controls in windows. GUI programming is a tedious project, the main reason lies in that the inner logical flow troubles me a lot. such as when you try to create a menuitem, you should first contruct a MenuBar object, then a Menu object, and then construct a menuitem, finnally append the menu object to the menubar object. Also you should bing the event to the itemmenu object.SizerThe programmer specifies the position and the size of each widget in pixels. when you use the absolute positions, you should understand several things:- when you resize the window, the size and the position of widgets do not change.- applications look different on various platforms.- changing fonts might spoiled the layout.- it&amp;#39;s difficult to redo the layout.Sizer address all those issues, we can choose among these sizers:    .    |-- wx.BoxSizer enable us to put several widgets into row or column.    |-- wx.GridSizer lays out widgets in two dimensional table, each cell has the same size.    |-- wx.FlexGridSizer all cells have same height in a row.    |-- wx.BagSizer the most complicated sizer.EventsEvents are integral part of every GUI application. All GUI application are event-driven.Event object is an object associated with the event. It is usually a window. Event type is a unique event, that has been generated. Event binder is an object, that binds an event type with an event handler.Widgetswx.Buttonwx.ToggleButtonwx.StaticLinewx.StaticTextwx.StaticBox it is used to logically group various widgets.wx.ComboBox a single line text field, a button with a down arrow image and a listbox.wx.CheckBox notice that, like the togglebox, it has two states.wx.StatusBarwx.RadioButtonwx.Gauge It has an indicator to show the current state of a task.wx.Sliderwx.SpinCtrlreference[1]: *wxPython tutorial *"
    } ,
  
    {
      "title"    : "To Live, To Life",
      "category" : "life",
      "tags"     : "lankar",
      "url"      : "/post/to-live,-to-life",
      "date"     : "2013-03-10 00:00:00 +0800",
      "content"  : "In the myterious equations of love that any logic or reasons can be found.you are the only reason I am. You are all the reason.Enjoy writingAt some point, I begin to rethink the meanings of writing. It seems to me that it&amp;#39;s not only the memories of carrier, but also it organize my thoughts, enlightened and inspired ideas.  Especially for the developers, it&amp;#39;s important to form the habit of summarization and conclusion.Under the cover of darkness, a suitable desk accompanied with a laptop, beside a cup of tea. In the warm light, the smell of tea flow with mind. It&amp;#39;s just perfect!Just go aheadThe preliminary assumption on the content of this blog contains the following categories:note : the usage of some tools or languages.study: some interest research fields in my directions.phi: some comprehensive thoughts.lankar: about personality writing by Chinese.compar: the customize abbre of comparision, which is appeals to me a lot.The preliminary assumption on the content of this blog contain the following tags:.|-- life|   |-- feelings|   |-- tips|-- work|   |-- languages|   |   |-- python|   |   |-- ruby|   |   |-- c++|   |   |-- et al.|   |-- tools|   |-- |-- git|   |-- |-- latex|   |-- |-- et al.|   |-- research|   |-- |-- nlp(natural language process)|   |-- |-- ml(machine learning)So longHowever, the position of this blog is still aimed to technique articles, and do some help for myself, and It will be my honor if it happens to be useful to you.so long, and thanks for all the fish ^_^"
    } ,
  
    {
      "title"    : "Some Comparison Between Ruby And Python",
      "category" : "programming",
      "tags"     : "language",
      "url"      : "/post/some-comparison-between-ruby-and-python",
      "date"     : "2013-03-10 00:00:00 +0800",
      "content"  : "Memory is a scret things. many people may encounter the following situation: when you endeavour to remember some connected or similar things togther, It often become more difficult to remember them. what confuses us most just lies in the many similarities and differences in their properties.functional programming vs imperative programmingFrom the perspective of deeper phylosophy level of programming, we can distinct all kinds of languages(such as ruby, python, c, c++, haskell, lisp etc) with the category above."
    } 
  
  ,
  
   {
     
        "title"    : "Algorithm",
        "category" : "",
        "tags"     : "",
        "url"      : "/blog/tag/algorithm/",
        "date"     : "",
        "content"  : ""
     
   } ,
  
   {
     
        "title"    : "comparison",
        "category" : "",
        "tags"     : "",
        "url"      : "/blog/tag/comparison/",
        "date"     : "",
        "content"  : ""
     
   } ,
  
   {
     
        "title"    : "Design Pattern",
        "category" : "design-pattern",
        "tags"     : "",
        "url"      : "/blog/category/design-pattern/",
        "date"     : "",
        "content"  : ""
     
   } ,
  
   {
     
        "title"    : "HeadFirst",
        "category" : "",
        "tags"     : "",
        "url"      : "/blog/tag/headfirst/",
        "date"     : "",
        "content"  : ""
     
   } ,
  
   {
     
        "title"    : "Wei Heng",
        "category" : "",
        "tags"     : "",
        "url"      : "/",
        "date"     : "",
        "content"  : "     SO LONG, AND THANKS FOR ALL THE FISH.                                            当我们谈论RESTful时我们在谈论什么              19 Dec 2015                                                                                            标题好像有点噱头山人在此先检讨去知乎了一下发现这种句式叫做卡佛句式好像村上春树也用过看来是雅俗共赏的且回正文最近Team要做一个Service负责一些全局资源的管理并为Internal的其他Services提供通用资源访问接口想着之前一直是用一些RPC-style的架构不如来试试RESTful的吧虽然关于什么才是真正的REST一直有很多争论                                                                                                                                                                                                                                                                                             -                                                                                       也谈MCMC方法与Gibbs抽样              07 Dec 2015                                                                                            MCMC即传说中的Markov Chain Mento Carlo方法其主要用于统计推理中进行模拟抽样尤其在贝叶斯推理中有着非常广泛的应用如算法模型的后验参数估计问题很多情况下其后验概率分布没有确定性的解析解或者解析解计算起来非常复杂便可以通过MCMC模拟抽样根据大数定律参数的期望便可以通过对抽样样本的求均值来评估                                                                                                                                                                                                                                                                                           -                                                                                       核函数与支持向量机入门              30 Aug 2015                                                                                            理解支持向量机(Support Vector Machine, SVM)的角度很多从分类问题入手由最小化训练错误导出限制条件下的凸优化问题的解进而由线性可分的硬边界泛化为利用松弛变量放宽限制条件的软边界问题从一般性的损失函数出发由线性回归的0-1损失函数换成hinge损失函数进而加上针对模型复杂度的L2惩罚项亦或是从支持向量的角度由核函数的一般应用到稀疏核的支持向量进而分析SVM的核技巧后者学习曲线相对来说比较大却有助于深入理解SVM                                                                                                                                                                                                                                                                                              -                                                                                       浅谈L0,L1,L2范数及其应用              23 Aug 2015                                                                                            在线性代数函数分析等数学分支中范数Norm是一个函数其赋予某个向量空间或矩阵中的每个向量以长度或大小对于零向量另其长度为零直观的说向量或矩阵的范数越大则我们可以说这个向量或矩阵也就越大有时范数有很多更为常见的叫法如绝对值其实便是一维向量空间中实数或复数的范数而Euclidean距离也是一种范数                                                                                                                                                                                                                                                                                           -                                                                                       Java 异常处理实践              04 Aug 2015                                                                                            Java中的异常处理一直是困扰着我比如catch并throw一个异常的best practice是什么checked和unchecked异常的区别和使用异常和错误该如何处理最近在工作中连续出现了一些与异常相关的一些issues才发现需要进行一些整理和总结了                                                                                                                                                                                                                                                                                             -                                                                                       微信与财付通接口签名调试总结              30 Jul 2015                                                                                            这几年国内互联网的迅速发展不仅催生出了BAT也使得第三方支付平台异军突起在欧美还是信用卡统治的时代另一个具有中国特色的第三方支付方式External Payments, 或跳转支付不仅成功的绑定了用户的支付习惯更是为国外支付行业进入中国建造了一个壁垒而支付宝(Alipay)和微信(WeChat)则是如今第三方支付的主流                                                                                                                                                                                             -                                                                                       为Jekyll博客添加目录与ScrollSpy效果              28 Jul 2015                                                                                            随着网上利用JekyllGithub Pages搭建个人静态博客的帖子越来越多按照教程自己动手搭一个基于Github账户的博客已完全成为一个五分钟速成课程的内容了网上也随处可见优美的博客主题且能完全即插即用但对于一些想要更深入定制化的博主本文主要集合自己折腾的经验介绍下如何给Jekyll博客添加目录即Table of Content以及定制化目录显示的ScrollSpy效果                                                                                                                                                                                                                                                                                           -                                                                                       Sublime2下配置Python模块查找路径PYTHONPATH              21 Jul 2015                                                                                            最近在搞sclearn kit库用命令行build太麻烦就直接用Sublime2来build但发现build时总是出现sclearn模块找不到的情况但的确已经通过pip install 了相关包最后发现是sublime2里配置的Python setting 路径也需要配置PYTHONPATH变量来指出module的路径                                                                                                                                                                                                                                                                                           -                                                                                       .gitignore文件不起作用              07 Jun 2015                                                                                            当我们用git时常常会习惯把我们不想上传到远程代码库中的一些本地文件夹放在一个叫做.gitignore的文件中例如常见的本地build文件夹一些IDE如Intellig,Eclipse的项目管理文件但有些时候我们会遇到这样的问题放入gitignore文件夹中的文件却还是被git index, 当你通过git status 显示文件状态时他们并没有被忽略                                                                                                                                                                                                                                                                                           -                                                                                       css常用tips汇总              07 Jun 2015                                                                                            最近给博客换了一个新的主题布局把以前传统方式的侧边栏给换成了导航栏同时利用font-awesome图标加了些分类和标签由于之前没有系统的看过关于css+div方面的书籍只是在用到某个效果时临时的Google于是在这边纪录下用到的一些非常有用的css+div的tips.                                                                                                                                                                                                                                                                                           -                                               "
     
   } ,
  
   {
     
        "title"    : "Interview",
        "category" : "",
        "tags"     : "",
        "url"      : "/blog/tag/interview/",
        "date"     : "",
        "content"  : ""
     
   } ,
  
   {
     
        "title"    : "Jekyll",
        "category" : "",
        "tags"     : "",
        "url"      : "/blog/tag/jekyll/",
        "date"     : "",
        "content"  : ""
     
   } ,
  
   {
     
        "title"    : "Language",
        "category" : "",
        "tags"     : "",
        "url"      : "/blog/tag/language/",
        "date"     : "",
        "content"  : ""
     
   } ,
  
   {
     
        "title"    : "Lankar",
        "category" : "",
        "tags"     : "",
        "url"      : "/blog/tag/lankar/",
        "date"     : "",
        "content"  : ""
     
   } ,
  
   {
     
        "title"    : "Life",
        "category" : "life",
        "tags"     : "",
        "url"      : "/blog/category/life/",
        "date"     : "",
        "content"  : ""
     
   } ,
  
   {
     
        "title"    : "Linux",
        "category" : "",
        "tags"     : "",
        "url"      : "/blog/tag/linux/",
        "date"     : "",
        "content"  : ""
     
   } ,
  
   {
     
        "title"    : "机器学习",
        "category" : "机器学习",
        "tags"     : "",
        "url"      : "/blog/category/机器学习/",
        "date"     : "",
        "content"  : ""
     
   } ,
  
   {
     
        "title"    : "Wei Heng",
        "category" : "",
        "tags"     : "",
        "url"      : "/me",
        "date"     : "",
        "content"  : "    GitHub        Reach Me      http://hengwei.me      jj@hengwei.me       https://www.linkedin.com/in/hengwei    https://www.quora.com/profile/Will-Heng"
     
   } ,
  
   {
     
        "title"    : "Notes",
        "category" : "notes",
        "tags"     : "",
        "url"      : "/blog/category/notes/",
        "date"     : "",
        "content"  : ""
     
   } ,
  
   {
     
        "title"    : "payments",
        "category" : "",
        "tags"     : "",
        "url"      : "/blog/tag/payments/",
        "date"     : "",
        "content"  : ""
     
   } ,
  
   {
     
        "title"    : "Programming",
        "category" : "programming",
        "tags"     : "",
        "url"      : "/blog/category/programming/",
        "date"     : "",
        "content"  : ""
     
   } ,
  
   {
     
        "title"    : "Wei Heng",
        "category" : "",
        "tags"     : "",
        "url"      : "/project",
        "date"     : "",
        "content"  : " Projects Lists -WEI&#39;S MACHINE LEARNING PLANAnother personal machine learning study notes, aimed to build cool projects based on machine learning techniques. Still pending on cool ideas, knowledge bases and of course, free time after work. -PRESENTATIONS NLP Introduction and Practises DW IntroductionIJCAI Hierarchical Latent Dirichlet Allocation"
     
   } ,
  
   {
     
        "title"    : "Research",
        "category" : "",
        "tags"     : "",
        "url"      : "/blog/tag/research/",
        "date"     : "",
        "content"  : ""
     
   } ,
  
   {
     
   } ,
  
   {
     
        "title"    : "Tips",
        "category" : "",
        "tags"     : "",
        "url"      : "/blog/tag/tips/",
        "date"     : "",
        "content"  : ""
     
   } ,
  
   {
     
        "title"    : "Tools",
        "category" : "",
        "tags"     : "",
        "url"      : "/blog/tag/tools/",
        "date"     : "",
        "content"  : ""
     
   } ,
  
   {
     
        "title"    : "Tutorials",
        "category" : "tutorials",
        "tags"     : "",
        "url"      : "/blog/category/tutorials/",
        "date"     : "",
        "content"  : ""
     
   } ,
  
   {
     
        "title"    : "Web Service",
        "category" : "",
        "tags"     : "",
        "url"      : "/blog/tag/web-service/",
        "date"     : "",
        "content"  : ""
     
   } ,
  
   {
     
        "title"    : "Work",
        "category" : "work",
        "tags"     : "",
        "url"      : "/blog/category/work/",
        "date"     : "",
        "content"  : ""
     
   } ,
  
   {
     
        "title"    : "Wei Heng",
        "category" : "",
        "tags"     : "",
        "url"      : "/posts/page2/",
        "date"     : "",
        "content"  : "     SO LONG, AND THANKS FOR ALL THE FISH.    {% for post in paginator.posts %}                                        {{ post.title }}              {{ post.date | date_to_string }}                                                                        {% if post.content contains &quot;&quot; %}                    {{ post.content | split:&quot;&quot; | first | strip_html | remove: &quot;&quot; | remove: &quot;&quot; }}                  {% else %}                    {{ post.content | strip_html | truncatewords:50}}                  {% endif %}                                                          {% assign foundImage = 0 %}              {% assign images = post.content | split:&quot;&quot; | first %}                                        {% break %}                  {% endif %}                {% endif %}              {% endfor %}                                                       -                                               {% endfor %}"
     
   } ,
  
   {
     
        "title"    : "Wei Heng",
        "category" : "",
        "tags"     : "",
        "url"      : "/posts/page3/",
        "date"     : "",
        "content"  : "     SO LONG, AND THANKS FOR ALL THE FISH.    {% for post in paginator.posts %}                                        {{ post.title }}              {{ post.date | date_to_string }}                                                                        {% if post.content contains &quot;&quot; %}                    {{ post.content | split:&quot;&quot; | first | strip_html | remove: &quot;&quot; | remove: &quot;&quot; }}                  {% else %}                    {{ post.content | strip_html | truncatewords:50}}                  {% endif %}                                                          {% assign foundImage = 0 %}              {% assign images = post.content | split:&quot;&quot; | first %}                                        {% break %}                  {% endif %}                {% endif %}              {% endfor %}                                                       -                                               {% endfor %}"
     
   } ,
  
   {
     
        "title"    : "Wei Heng",
        "category" : "",
        "tags"     : "",
        "url"      : "/posts/page4/",
        "date"     : "",
        "content"  : "     SO LONG, AND THANKS FOR ALL THE FISH.    {% for post in paginator.posts %}                                        {{ post.title }}              {{ post.date | date_to_string }}                                                                        {% if post.content contains &quot;&quot; %}                    {{ post.content | split:&quot;&quot; | first | strip_html | remove: &quot;&quot; | remove: &quot;&quot; }}                  {% else %}                    {{ post.content | strip_html | truncatewords:50}}                  {% endif %}                                                          {% assign foundImage = 0 %}              {% assign images = post.content | split:&quot;&quot; | first %}                                        {% break %}                  {% endif %}                {% endif %}              {% endfor %}                                                       -                                               {% endfor %}"
     
   } ,
  
   {
     
        "title"    : "Wei Heng",
        "category" : "",
        "tags"     : "",
        "url"      : "/posts/page5/",
        "date"     : "",
        "content"  : "     SO LONG, AND THANKS FOR ALL THE FISH.    {% for post in paginator.posts %}                                        {{ post.title }}              {{ post.date | date_to_string }}                                                                        {% if post.content contains &quot;&quot; %}                    {{ post.content | split:&quot;&quot; | first | strip_html | remove: &quot;&quot; | remove: &quot;&quot; }}                  {% else %}                    {{ post.content | strip_html | truncatewords:50}}                  {% endif %}                                                          {% assign foundImage = 0 %}              {% assign images = post.content | split:&quot;&quot; | first %}                                        {% break %}                  {% endif %}                {% endif %}              {% endfor %}                                                       -                                               {% endfor %}"
     
   } 
  
]

